{
  "success": true,
  "error": null,
  "results": {
    "printers": [
      {
        "elements": [],
        "description": "{\n    \"payable\": {\n        \"IPyth\": [\n            \"updatePriceFeeds(bytes[])\",\n            \"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\",\n            \"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\",\n            \"parseTwapPriceFeedUpdates(bytes[],bytes32[])\",\n            \"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\",\n            \"parsePriceFeedUpdatesWithSlots(bytes[],bytes32[],uint64,uint64)\"\n        ],\n        \"IEVC\": [\n            \"setLockdownMode(bytes19,bool)\",\n            \"setPermitDisabledMode(bytes19,bool)\",\n            \"setNonce(bytes19,uint256,uint256)\",\n            \"setOperator(bytes19,address,uint256)\",\n            \"setAccountOperator(address,address,bool)\",\n            \"enableCollateral(address,address)\",\n            \"disableCollateral(address,address)\",\n            \"reorderCollaterals(address,uint8,uint8)\",\n            \"enableController(address,address)\",\n            \"disableController(address)\",\n            \"permit(address,address,uint256,uint256,uint256,uint256,bytes,bytes)\",\n            \"call(address,address,uint256,bytes)\",\n            \"controlCollateral(address,address,uint256,bytes)\",\n            \"batch((address,address,uint256,bytes)[])\",\n            \"batchRevert((address,address,uint256,bytes)[])\",\n            \"batchSimulation((address,address,uint256,bytes)[])\",\n            \"requireAccountStatusCheck(address)\",\n            \"forgiveAccountStatusCheck(address)\",\n            \"requireVaultStatusCheck()\",\n            \"forgiveVaultStatusCheck()\",\n            \"requireAccountAndVaultStatusCheck(address)\"\n        ],\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"AssetRegistry\": [\n            \"constructor(address)\"\n        ],\n        \"BasketManager\": [\n            \"constructor(address,address,address,address,address,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"execute(address,bytes,uint256)\"\n        ],\n        \"BasketToken\": [\n            \"constructor()\"\n        ],\n        \"FeeCollector\": [\n            \"constructor(address,address,address)\"\n        ],\n        \"AnchoredOracle\": [\n            \"constructor(address,address,uint256)\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"constructor(address,address)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"constructor(address,address,address,uint256,bool,bool)\"\n        ],\n        \"ERC4626Oracle\": [\n            \"constructor(address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"constructor(address,address)\"\n        ],\n        \"StrategyRegistry\": [\n            \"constructor(address)\"\n        ],\n        \"TokenSwapAdapter\": [\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\"\n        ],\n        \"TokenSwapAdapterMock\": [\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\"\n        ]\n    },\n    \"timestamp\": {\n        \"ERC20PermitUpgradeable\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n        ],\n        \"ChainlinkOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"PythOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"BasketManager\": [\n            \"proposeRebalance(address[])\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"BasketToken\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"harvestManagementFee()\"\n        ],\n        \"BasketManagerUtils\": [\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\",\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"setTargetWeights(uint256,uint64[])\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\"\n        ]\n    },\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"AccessControl\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"AccessControlEnumerable\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"ERC20\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"Multicall\": [\n            \"multicall(bytes[])\"\n        ],\n        \"ERC20Upgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"deposit(uint256,address)\",\n            \"mint(uint256,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"redeem(uint256,address,address)\"\n        ],\n        \"MulticallUpgradeable\": [\n            \"multicall(bytes[])\"\n        ],\n        \"EulerRouter\": [\n            \"transferGovernance(address)\",\n            \"govSetConfig(address,address,address)\",\n            \"govSetResolvedVault(address,bool)\",\n            \"govSetFallbackOracle(address)\"\n        ],\n        \"Governable\": [\n            \"transferGovernance(address)\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"removePlugin(address)\",\n            \"removeAllPlugins()\"\n        ],\n        \"AssetRegistry\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"addAsset(address)\",\n            \"setAssetStatus(address,uint8)\"\n        ],\n        \"BasketManager\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address,address,address,address,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"proposeRebalance(address[])\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"setTokenSwapAdapter(address)\",\n            \"proRataRedeem(uint256,uint256,address)\",\n            \"setManagementFee(address,uint16)\",\n            \"setSwapFee(uint16)\",\n            \"setStepDelay(uint40)\",\n            \"setRetryLimit(uint8)\",\n            \"setSlippageLimit(uint256)\",\n            \"setWeightDeviation(uint256)\",\n            \"collectSwapFee(address)\",\n            \"updateBitFlag(address,uint256)\",\n            \"pause()\",\n            \"unpause()\",\n            \"execute(address,bytes,uint256)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketToken\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"multicall(bytes[])\",\n            \"addPlugin(address)\",\n            \"removePlugin(address)\",\n            \"removeAllPlugins()\",\n            \"initialize(address,string,string,uint256,address,address)\",\n            \"requestDeposit(uint256,address,address)\",\n            \"requestRedeem(uint256,address,address)\",\n            \"fulfillDeposit(uint256)\",\n            \"setBitFlag(uint256)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"fulfillRedeem(uint256)\",\n            \"cancelDepositRequest()\",\n            \"cancelRedeemRequest()\",\n            \"setOperator(address,bool)\",\n            \"claimFallbackShares(address,address)\",\n            \"claimFallbackAssets(address,address)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"harvestManagementFee()\",\n            \"deposit(uint256,address,address)\",\n            \"deposit(uint256,address)\",\n            \"mint(uint256,address,address)\",\n            \"mint(uint256,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"redeem(uint256,address,address)\"\n        ],\n        \"FeeCollector\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address,address)\",\n            \"setProtocolTreasury(address)\",\n            \"setSponsor(address,address)\",\n            \"setSponsorSplit(address,uint16)\",\n            \"notifyHarvestFee(uint256)\",\n            \"claimSponsorFee(address)\",\n            \"claimTreasuryFee(address)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"multicall(bytes[])\",\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address)\",\n            \"setTargetWeights(uint256,uint64[])\"\n        ],\n        \"StrategyRegistry\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\"\n        ],\n        \"ERC20DecimalsMock\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"registerStrategy(address)\",\n            \"unregisterStrategy(address)\",\n            \"setBitFlagSupport(address,uint256,bool)\",\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n            \"clearMockData()\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"ScenarioSimpleMedusa\": {\n            \"invariant_erc20_total_supply()\": [\n                {\n                    \"start\": 17072,\n                    \"length\": 52,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        362\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 65\n                }\n            ],\n            \"max_no_revert(address)\": [\n                {\n                    \"start\": 17704,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        378\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 17827,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        382\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 17952,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        386\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 18079,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        390\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                }\n            ],\n            \"invariant_deposit_request()\": [\n                {\n                    \"start\": 21893,\n                    \"length\": 37,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        483\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 54\n                }\n            ],\n            \"invariant_redeem_request()\": [\n                {\n                    \"start\": 23808,\n                    \"length\": 38,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        525\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 55\n                }\n            ]\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"UserHandler\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        }\n    },\n    \"constant_functions\": {\n        \"AccessControl\": [\n            \"supportsInterface(bytes4)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"IAccessControl\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\"\n        ],\n        \"AccessControlEnumerable\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"IAccessControlEnumerable\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\"\n        ],\n        \"IERC1363\": [\n            \"supportsInterface(bytes4)\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC4626\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"asset()\",\n            \"totalAssets()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"maxDeposit(address)\",\n            \"previewDeposit(uint256)\",\n            \"maxMint(address)\",\n            \"previewMint(uint256)\",\n            \"maxWithdraw(address)\",\n            \"previewWithdraw(uint256)\",\n            \"maxRedeem(address)\",\n            \"previewRedeem(uint256)\"\n        ],\n        \"IERC5267\": [\n            \"eip712Domain()\"\n        ],\n        \"ERC20\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC20Metadata\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC20Permit\": [\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"Pausable\": [\n            \"paused()\"\n        ],\n        \"ERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"IERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"ERC20Upgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"eip712Domain()\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"decimals()\",\n            \"asset()\",\n            \"totalAssets()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"maxDeposit(address)\",\n            \"maxMint(address)\",\n            \"maxWithdraw(address)\",\n            \"maxRedeem(address)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"previewWithdraw(uint256)\",\n            \"previewRedeem(uint256)\"\n        ],\n        \"NoncesUpgradeable\": [\n            \"nonces(address)\"\n        ],\n        \"EIP712Upgradeable\": [\n            \"eip712Domain()\"\n        ],\n        \"ERC165Upgradeable\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"IPyth\": [\n            \"getPriceUnsafe(bytes32)\",\n            \"getPriceNoOlderThan(bytes32,uint256)\",\n            \"getEmaPriceUnsafe(bytes32)\",\n            \"getEmaPriceNoOlderThan(bytes32,uint256)\",\n            \"getUpdateFee(bytes[])\"\n        ],\n        \"IEVC\": [\n            \"getRawExecutionContext()\",\n            \"getCurrentOnBehalfOfAccount(address)\",\n            \"areChecksDeferred()\",\n            \"areChecksInProgress()\",\n            \"isControlCollateralInProgress()\",\n            \"isOperatorAuthenticated()\",\n            \"isSimulationInProgress()\",\n            \"haveCommonOwner(address,address)\",\n            \"getAddressPrefix(address)\",\n            \"getAccountOwner(address)\",\n            \"isLockdownMode(bytes19)\",\n            \"isPermitDisabledMode(bytes19)\",\n            \"getNonce(bytes19,uint256)\",\n            \"getOperator(bytes19,address)\",\n            \"isAccountOperatorAuthorized(address,address)\",\n            \"getCollaterals(address)\",\n            \"isCollateralEnabled(address,address)\",\n            \"getControllers(address)\",\n            \"isControllerEnabled(address,address)\",\n            \"getLastAccountStatusCheckTimestamp(address)\",\n            \"isAccountStatusCheckDeferred(address)\",\n            \"isVaultStatusCheckDeferred(address)\"\n        ],\n        \"EVCUtil\": [\n            \"EVC()\"\n        ],\n        \"EulerRouter\": [\n            \"name()\",\n            \"EVC()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"getConfiguredOracle(address,address)\",\n            \"resolveOracle(uint256,address,address)\",\n            \"governor()\",\n            \"name()\",\n            \"fallbackOracle()\",\n            \"resolvedVaults(address)\"\n        ],\n        \"BaseAdapter\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"CrossAdapter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"cross()\",\n            \"quote()\",\n            \"oracleBaseCross()\",\n            \"oracleCrossQuote()\"\n        ],\n        \"AggregatorV3Interface\": [\n            \"decimals()\",\n            \"latestRoundData()\"\n        ],\n        \"ChainlinkOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\",\n            \"feed()\",\n            \"maxStaleness()\"\n        ],\n        \"ICurvePool\": [\n            \"coins(uint256)\",\n            \"price_oracle(uint256)\",\n            \"price_oracle()\",\n            \"lpPrice()\"\n        ],\n        \"PythOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"pyth()\",\n            \"base()\",\n            \"quote()\",\n            \"feedId()\",\n            \"maxStaleness()\",\n            \"maxConfWidth()\"\n        ],\n        \"IPriceOracle\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"Governable\": [\n            \"EVC()\",\n            \"governor()\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"allowance(address,address)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"balanceOf(address)\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"IERC20Plugins\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"IPlugin\": [\n            \"TOKEN()\"\n        ],\n        \"AssetRegistry\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getAssetStatus(address)\",\n            \"getAssets(uint256)\",\n            \"getAllAssets()\",\n            \"hasPausedAssets(uint256)\",\n            \"getAssetsBitFlag(address[])\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"enabledAssets()\"\n        ],\n        \"BasketManager\": [\n            \"paused()\",\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"basketTokenToIndex(address)\",\n            \"getAssetIndexInBasket(address,address)\",\n            \"basketTokenToBaseAssetIndex(address)\",\n            \"numOfBasketTokens()\",\n            \"basketTokens()\",\n            \"basketIdToAddress(bytes32)\",\n            \"basketBalanceOf(address,address)\",\n            \"rebalanceStatus()\",\n            \"externalTradesHash()\",\n            \"eulerRouter()\",\n            \"feeCollector()\",\n            \"managementFee(address)\",\n            \"swapFee()\",\n            \"slippageLimit()\",\n            \"weightDeviationLimit()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"tokenSwapAdapter()\",\n            \"retryCount()\",\n            \"retryLimit()\",\n            \"stepDelay()\",\n            \"basketAssets(address)\",\n            \"collectedSwapFees(address)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"BasketToken\": [\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\",\n            \"eip712Domain()\",\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"allowance(address,address)\",\n            \"isOperator(address,address)\",\n            \"asset()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"pluginBalanceOf(address,address)\",\n            \"totalAssets()\",\n            \"getTargetWeights()\",\n            \"getAssets()\",\n            \"pendingDepositRequest(uint256,address)\",\n            \"claimableDepositRequest(uint256,address)\",\n            \"pendingRedeemRequest(uint256,address)\",\n            \"claimableRedeemRequest(uint256,address)\",\n            \"totalPendingDeposits()\",\n            \"totalPendingRedemptions()\",\n            \"share()\",\n            \"claimableFallbackShares(address)\",\n            \"claimableFallbackAssets(address)\",\n            \"maxWithdraw(address)\",\n            \"maxRedeem(address)\",\n            \"maxDeposit(address)\",\n            \"maxMint(address)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"previewWithdraw(uint256)\",\n            \"previewRedeem(uint256)\",\n            \"fallbackRedeemTriggered(uint256)\",\n            \"fallbackDepositTriggered(uint256)\",\n            \"getDepositRequest(uint256)\",\n            \"getRedeemRequest(uint256)\",\n            \"supportsInterface(bytes4)\",\n            \"balanceOf(address)\",\n            \"decimals()\",\n            \"isOperator(address,address)\",\n            \"lastDepositRequestId(address)\",\n            \"lastRedeemRequestId(address)\",\n            \"basketManager()\",\n            \"nextDepositRequestId()\",\n            \"nextRedeemRequestId()\",\n            \"assetRegistry()\",\n            \"bitFlag()\",\n            \"strategy()\",\n            \"lastManagementFeeHarvestTimestamp()\"\n        ],\n        \"FeeCollector\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"protocolTreasury()\",\n            \"basketTokenSponsors(address)\",\n            \"basketTokenSponsorSplits(address)\",\n            \"claimableTreasuryFees(address)\",\n            \"claimableSponsorFees(address)\"\n        ],\n        \"IERC7540Operator\": [\n            \"isOperator(address,address)\"\n        ],\n        \"IERC7540Deposit\": [\n            \"pendingDepositRequest(uint256,address)\",\n            \"claimableDepositRequest(uint256,address)\"\n        ],\n        \"IERC7540Redeem\": [\n            \"pendingRedeemRequest(uint256,address)\",\n            \"claimableRedeemRequest(uint256,address)\"\n        ],\n        \"IChainlinkAggregatorV3Interface\": [\n            \"decimals()\",\n            \"description()\",\n            \"version()\",\n            \"getRoundData(uint80)\",\n            \"latestRoundData()\",\n            \"aggregator()\"\n        ],\n        \"IPriceOracleWithBaseAndQuote\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"base()\",\n            \"quote()\"\n        ],\n        \"IAllowanceTransfer\": [\n            \"DOMAIN_SEPARATOR()\",\n            \"allowance(address,address,address)\"\n        ],\n        \"IDAIPermit\": [\n            \"nonces(address)\"\n        ],\n        \"IEIP712\": [\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"BasketManagerUtils\": [\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\",\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\"\n        ],\n        \"AnchoredOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"primaryOracle()\",\n            \"anchorOracle()\",\n            \"maxDivergence()\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\",\n            \"vaults(uint256)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"pool()\",\n            \"base()\",\n            \"quote()\",\n            \"priceOracleIndex()\"\n        ],\n        \"ERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getTargetWeights(uint256)\",\n            \"supportsBitFlag(uint256)\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"targetWeights(uint256,uint256)\",\n            \"lastUpdated(uint256)\"\n        ],\n        \"StrategyRegistry\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsBitFlag(uint256,address)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"WeightStrategy\": [\n            \"getTargetWeights(uint256)\",\n            \"supportsBitFlag(uint256)\"\n        ],\n        \"BasketManagerHandlers\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"assets(uint256)\",\n            \"admin()\",\n            \"manager()\",\n            \"pauser()\",\n            \"timelock()\",\n            \"protocolTreasury()\",\n            \"users(uint256)\",\n            \"tokenSwap()\",\n            \"rebalancer()\",\n            \"oracleHandler()\",\n            \"feeCollectorHandler()\",\n            \"basketManagerAdminHandler()\",\n            \"basketManager()\",\n            \"basketToken()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"managedStrategy()\",\n            \"priceOracle()\",\n            \"feeCollector()\",\n            \"BASKET_BITFLAG()\",\n            \"initialWeights(uint256)\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"invariant_basketRegistrationConsistency()\",\n            \"invariant_knownBasketRegistrationConsistency()\",\n            \"invariant_configurationBounds()\",\n            \"invariant_variableLink()\",\n            \"invariant_rebalanceStatusValidity()\",\n            \"invariant_assetIndexConsistency()\",\n            \"max_no_revert(address)\",\n            \"invariant_deposit_request()\",\n            \"invariant_redeem_request()\",\n            \"IS_TEST()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"assets(uint256)\",\n            \"admin()\",\n            \"manager()\",\n            \"pauser()\",\n            \"timelock()\",\n            \"protocolTreasury()\",\n            \"users(uint256)\",\n            \"tokenSwap()\",\n            \"rebalancer()\",\n            \"oracleHandler()\",\n            \"feeCollectorHandler()\",\n            \"basketManagerAdminHandler()\",\n            \"basketManager()\",\n            \"basketToken()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"managedStrategy()\",\n            \"priceOracle()\",\n            \"feeCollector()\",\n            \"BASKET_BITFLAG()\",\n            \"initialWeights(uint256)\"\n        ],\n        \"FakeBasketManagerForFeeCollector\": [\n            \"hasRole(bytes32,address)\",\n            \"basketManager()\"\n        ],\n        \"GlobalState\": [\n            \"get_controller_from_request_id(address,uint256)\",\n            \"price_was_updated()\",\n            \"requestDepositToController(address,uint256,uint256)\"\n        ],\n        \"FeeCollectorHandler\": [\n            \"basketManager()\"\n        ],\n        \"OracleHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"IS_TEST()\",\n            \"basketManager()\",\n            \"globalState()\"\n        ],\n        \"RebalancerHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"baskets_proposed()\",\n            \"IS_TEST()\",\n            \"basketManager()\",\n            \"latest_baskets_proposed(uint256)\"\n        ],\n        \"TokenSwapHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"externalTrades()\",\n            \"rebalancingBaskets()\",\n            \"targetWeights()\",\n            \"basketAssets()\",\n            \"IS_TEST()\",\n            \"last_externalTrades(uint256)\",\n            \"last_basketsToRebalance(uint256)\",\n            \"last_targetWeights(uint256,uint256)\",\n            \"last_basketAssets(uint256,uint256)\",\n            \"basketManager()\",\n            \"globalState()\"\n        ],\n        \"ControllerOnlyUserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"ControllerOnlyUserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"RequesterOnlyUserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"RequesterOnlyUserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"UserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"UserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"Constants\": [\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\"\n        ],\n        \"AssetRegistryMock\": [\n            \"getAssets(uint256)\",\n            \"getAllAssets()\",\n            \"hasPausedAssets(uint256)\",\n            \"isAssetPaused(address)\",\n            \"getAssetMetadata(address)\",\n            \"getAssetDecimals(address)\",\n            \"getAssetCount(uint256)\",\n            \"getAssetAtIndex(uint256,uint256)\",\n            \"isAssetRegistered(uint256,address)\",\n            \"getPausedAssets(uint256)\",\n            \"mockAssets(uint256,uint256)\",\n            \"mockPausedAssets(address)\",\n            \"mockAssetMetadata(address)\",\n            \"mockAssetDecimals(address)\"\n        ],\n        \"ERC20DecimalsMock\": [\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"decimals()\"\n        ],\n        \"MockPriceOracle\": [\n            \"getPrice(address,address)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"getConfiguredOracle(address,address)\",\n            \"primaryOracle()\",\n            \"all_assets()\",\n            \"_all_assets(uint256)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsBitFlag(uint256,address)\",\n            \"isStrategyRegistered(address)\",\n            \"getRegisteredStrategies()\",\n            \"clearMockData()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"mockBitFlagSupport(address,uint256)\",\n            \"registeredStrategies(address)\"\n        ]\n    },\n    \"constants_used\": {\n        \"AccessControl\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"AccessControlEnumerable\": {\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"Multicall\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC165\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20Upgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"34\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u0019\\u0001\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'nq\\\\xed\\\\xae\\\\x12\\\\xb1\\\\xb9\\\\x7fM\\\\x1f`7\\\\x0f\\\\xef\\\\x10\\\\x10_\\\\xa2\\\\xfa\\\\xae\\\\x01&\\\\x11J\\\\x16\\\\x9cd\\\\x84]a&\\\\xc9'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"66\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"DOMAIN_SEPARATOR()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"ERC4626Upgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"asset()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalAssets()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"convertToAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxDeposit(address)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxMint(address)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxWithdraw(address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxRedeem(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewDeposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewMint(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"previewWithdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewRedeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"NoncesUpgradeable\": {\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"ERC165Upgradeable\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"EulerRouter\": {\n            \"transferGovernance(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"govSetConfig(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"govSetResolvedVault(address,bool)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"govSetFallbackOracle(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"resolveOracle(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"CrossAdapter\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"259200\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"12\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"int8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"-20\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639916\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"12\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"int8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"-20\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639916\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"900\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Governable\": {\n            \"transferGovernance(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20PluginsUpgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"MAX_PLUGINS_PER_ACCOUNT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"PLUGIN_CALL_GAS_LIMIT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"hasPlugin(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginsCount(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginAt(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"plugins(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginBalanceOf(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addPlugin(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removePlugin(address)\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeAllPlugins()\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"AssetRegistry\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addAsset(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"255\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setAssetStatus(address,uint8)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetsBitFlag(address[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManager\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"50000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"900\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToIndex(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetIndexInBasket(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToBaseAssetIndex(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"createNewBasket(string,string,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"232\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"472260498517428093450829853099908083\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"96\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"120\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"55\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalance(address[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setTokenSwapAdapter(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setManagementFee(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSwapFee(uint16)\": [\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint16\"\n                    }\n                ]\n            ],\n            \"setStepDelay(uint40)\": [\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setRetryLimit(uint8)\": [\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setSlippageLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setWeightDeviation(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"collectSwapFee(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"updateBitFlag(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"execute(address,bytes,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"rescue(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"34\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u0019\\u0001\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'nq\\\\xed\\\\xae\\\\x12\\\\xb1\\\\xb9\\\\x7fM\\\\x1f`7\\\\x0f\\\\xef\\\\x10\\\\x10_\\\\xa2\\\\xfa\\\\xae\\\\x01&\\\\x11J\\\\x16\\\\x9cd\\\\x84]a&\\\\xc9'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"66\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"DOMAIN_SEPARATOR()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"asset()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"MAX_PLUGINS_PER_ACCOUNT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"PLUGIN_CALL_GAS_LIMIT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"hasPlugin(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginsCount(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginAt(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"plugins(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginBalanceOf(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"addPlugin(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removePlugin(address)\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeAllPlugins()\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"18446744073709551615\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,string,string,uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"Cove \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cove\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"255\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"8\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"totalAssets()\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestDeposit(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"IAllowanceTransfer\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint160\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingDepositRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableDepositRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingRedeemRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableRedeemRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"fulfillDeposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"prepareForRebalance(uint16,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"fulfillRedeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setOperator(address,bool)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableFallbackShares(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableFallbackAssets(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"harvestManagementFee()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxWithdraw(address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxRedeem(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxDeposit(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxMint(address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4162175037\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3820768869\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3460021840\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"789190853\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1645144292\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"910484757\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"99383044164297460920199564169379472118763403594000230800569066591923778078455\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"99383044164297460920199564169379472118763403594000230800569066591923778078455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"15000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"IAllowanceTransfer\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"281474976710655\",\n                        \"type\": \"uint48\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint160\"\n                    }\n                ]\n            ]\n        },\n        \"FeeCollector\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setProtocolTreasury(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setSponsor(address,address)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setSponsorSplit(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"notifyHarvestFee(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2904890407\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimSponsorFee(address)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"claimTreasuryFee(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"rescue(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"232\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"472260498517428093450829853099908083\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"96\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"55\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"120\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,uint256,bool,bool)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setTargetWeights(uint256,uint64[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getTargetWeights(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StrategyRegistry\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerHandlers\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"100000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Eve\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Setup weights\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create assets\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create handlers\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DeFi Basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"timelock\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"AliceController\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Alice\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"7\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Set initial prices\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"protocolTreasury\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"400000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DEFI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"300000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Grant roles\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create users\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"pauser\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"manager\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"17\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"25920000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create strategy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create one basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weth\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create swap adapter (mock)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dai\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create core contracts\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"admin\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"usdc\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"100000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Eve\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Setup weights\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create handlers\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create assets\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DeFi Basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"timelock\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"AliceController\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Alice\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"7\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Set initial prices\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"protocolTreasury\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DEFI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"400000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"300000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Grant roles\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"pauser\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create users\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"17\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"manager\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"25920000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create strategy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create one basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weth\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create swap adapter (mock)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dai\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create core contracts\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"admin\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"usdc\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"invariant_assetConservation()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"### Balance of basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset conservation violated for asset\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"### Diff \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_basketRegistrationConsistency()\": [\n                [\n                    {\n                        \"value\": \"Basket token index mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket token count mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_knownBasketRegistrationConsistency()\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BasketId to address mapping mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket has invalid index\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Known basket has invalid index\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_configurationBounds()\": [\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Step delay below minimum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Management fee exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Swap fee exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Slippage limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Weight deviation limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Step delay above maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint16\"\n                    }\n                ]\n            ],\n            \"invariant_variableLink()\": [\n                [\n                    {\n                        \"value\": \"Basket asset registry mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket manager address mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_rebalanceStatusValidity()\": [\n                [\n                    {\n                        \"value\": \"Basket mask should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket mask is not zero during active rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry count exceeds limit\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Epoch or retry count should be non-zero when timestamp is non-zero\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry count should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Timestamp should be zero when not started\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades hash should be non-zero after trade proposal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Timestamp should not be before proposal timestamp\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Proposal timestamp should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Proposal timestamp should be non-zero during rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades hash should be zero when not started\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket hash is not zero during active rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket hash should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"invariant_assetIndexConsistency()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset index out of bounds\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset index mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Expected reversion\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"invariant_erc20_total_supply()\": [\n                [\n                    {\n                        \"value\": \"total supply \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"max_no_revert(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_deposit_request()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_redeem_request()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"GlobalState\": {\n            \"price_updated()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"rebalance_completed()\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"add_request_deposit_controller(address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerAdminHandler\": {\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setManagementFee(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSwapFee(uint16)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setStepDelay(uint40)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setRetryLimit(uint8)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSlippageLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setWeightDeviation(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"collectSwapFee(address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"FeeCollectorHandler\": {\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"OracleHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"changePrice(uint8,bool,uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,address)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"#### Update price: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"89\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RebalancerHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proposeRebalancer(bool[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalancerOnBasket(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalancerOnAll()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"TokenSwapHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"executeSwap()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeSmartSwap()\": [\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"To:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Sells: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total basket-asset pairs: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total supply: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" to \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total surplus/deficit records: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"INTERNAL TRADE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Basket: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n--- Processing basket ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Potential external trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"--- Processing non-base assets ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset DEFICIT: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Balance: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"to\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== Starting trade generation for baskets ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Generated internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== End of Weight Comparison ===\\n\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset needed for redemptions: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" DEFICIT: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset SURPLUS: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Generating external trades ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Trade generation summary ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No pending redemption shares are being processed\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"995\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Potential internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%) Redeem Adjusted Target Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" SURPLUS: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Resized internal trades array from\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" index: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" has assets: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Amount:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Buys: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Generating internal trades ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Resized external trades array from \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total basket USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Comparing Current vs Target Weights ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%) Original Target Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EXTERNAL TRADE \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" BALANCED\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" : \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Redemption USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"From:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== End of trade generation ===\\n\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Pending redemptions: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset target value (excl. redemptions): \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Sell Amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset total target: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Generated external trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Min Buy Amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" USD Value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint96\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" (\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset BALANCED\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"--- Processing redemptions ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Adjusted total USD value (excl. redemptions): \",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"completeRebalance()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"UserHandlerBase\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Constants\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"AssetRegistryMock\": {\n            \"addAsset(address,uint256,bytes,uint8)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No assets set for bit flag\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"hasPausedAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetAtIndex(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Asset index out of bounds\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isAssetRegistered(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getPausedAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20DecimalsMock\": {\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"mint(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StrategyRegistryMock\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"registerStrategy(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unregisterStrategy(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setBitFlagSupport(address,uint256,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Array lengths mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"getRegisteredStrategies()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"clearMockData()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3735928559\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"AccessControlEnumerable\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Multicall\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"34\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC4626Upgradeable\": {\n            \"convertToShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewMint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewWithdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewRedeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"EulerRouter\": {\n            \"transferGovernance(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetConfig(address,address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetResolvedVault(address,bool)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetFallbackOracle(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"int8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"20\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"int8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"20\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Governable\": {\n            \"transferGovernance(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC20PluginsUpgradeable\": {\n            \"transfer(address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"plugins(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AssetRegistry\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addAsset(address)\": {\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setAssetStatus(address,uint8)\": {\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.AND\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetsBitFlag(address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManager\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,address,address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToIndex(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetIndexInBasket(address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToBaseAssetIndex(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"createNewBasket(string,string,address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"120\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"96\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"232\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.OR\": [\n                    [\n                        {\n                            \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"472260498517428093450829853099908083\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalance(address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"updateBitFlag(address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"34\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"plugins(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,string,string,uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"totalAssets()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestDeposit(uint256,address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,address,address)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"fulfillDeposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"prepareForRebalance(uint16,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"fulfillRedeem(uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest()\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(address,address)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"harvestManagementFee()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxMint(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"789190853\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"4162175037\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.AND\": [\n                    [\n                        {\n                            \"value\": \"1461501637330902918203684832716283019655932542975\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"FeeCollector\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSponsor(address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"notifyHarvestFee(uint256)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimSponsorFee(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimTreasuryFee(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"120\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"96\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"232\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.OR\": [\n                    [\n                        {\n                            \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"472260498517428093450829853099908083\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,uint256,bool,bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setTargetWeights(uint256,uint64[])\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getTargetWeights(uint256)\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"StrategyRegistry\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerHandlers\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"17\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"18\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"100000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor()\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"17\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"18\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"100000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_assetConservation()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_basketRegistrationConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_knownBasketRegistrationConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_configurationBounds()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_variableLink()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_rebalanceStatusValidity()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_assetIndexConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_erc20_total_supply()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"max_no_revert(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_deposit_request()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_redeem_request()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"GlobalState\": {\n            \"add_request_deposit_controller(address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerAdminHandler\": {\n            \"setManagementFee(address,uint16)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pause()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"unpause()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"OracleHandler\": {\n            \"changePrice(uint8,bool,uint256)\": {\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"100\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"89\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RebalancerHandler\": {\n            \"proposeRebalancer(bool[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalancerOnBasket(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalancerOnAll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"TokenSwapHandler\": {\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"executeSwap()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeSmartSwap()\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1000000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"1000000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"995\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"10000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1000\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AssetRegistryMock\": {\n            \"addAsset(address,uint256,bytes,uint8)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isAssetRegistered(uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getPausedAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"StrategyRegistryMock\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"registerStrategy(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"unregisterStrategy(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"AccessControl\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            }\n        },\n        \"IAccessControl\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AccessControlEnumerable\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IAccessControlEnumerable\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC1363\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC4626\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"asset()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC5267\": {\n            \"eip712Domain()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Errors\": {},\n        \"IERC721Errors\": {},\n        \"IERC1155Errors\": {},\n        \"Clones\": {},\n        \"ERC20\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Metadata\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Permit\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"nonces(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"SafeERC20\": {},\n        \"Address\": {},\n        \"Context\": {},\n        \"Errors\": {},\n        \"Multicall\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Panic\": {},\n        \"Pausable\": {\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ReentrancyGuardTransient\": {},\n        \"Strings\": {},\n        \"TransientSlot\": {},\n        \"ECDSA\": {},\n        \"MessageHashUtils\": {},\n        \"ERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Math\": {},\n        \"SafeCast\": {},\n        \"SignedMath\": {},\n        \"EnumerableSet\": {},\n        \"Initializable\": {},\n        \"ERC20Upgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            },\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            }\n        },\n        \"ERC4626Upgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"asset()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"totalAssets()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            }\n        },\n        \"ContextUpgradeable\": {},\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"NoncesUpgradeable\": {\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"nonces(address)\"\n                ]\n            }\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"eip712Domain()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\"\n                ]\n            }\n        },\n        \"ERC165Upgradeable\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPyth\": {\n            \"getPriceUnsafe(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPriceNoOlderThan(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEmaPriceUnsafe(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEmaPriceNoOlderThan(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updatePriceFeeds(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getUpdateFee(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTwapPriceFeedUpdates(bytes[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdatesWithSlots(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPythEvents\": {},\n        \"PythStructs\": {},\n        \"ExecutionContext\": {},\n        \"IEVC\": {\n            \"getRawExecutionContext()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentOnBehalfOfAccount(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"areChecksDeferred()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"areChecksInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isControlCollateralInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperatorAuthenticated()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isSimulationInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"haveCommonOwner(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAddressPrefix(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAccountOwner(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isLockdownMode(bytes19)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPermitDisabledMode(bytes19)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(bytes19,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperator(bytes19,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isAccountOperatorAuthorized(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setLockdownMode(bytes19,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPermitDisabledMode(bytes19,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(bytes19,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperator(bytes19,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAccountOperator(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCollaterals(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isCollateralEnabled(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableCollateral(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableCollateral(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"reorderCollaterals(address,uint8,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getControllers(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isControllerEnabled(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableController(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableController(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,address,uint256,uint256,uint256,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"call(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"controlCollateral(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batch((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batchRevert((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batchSimulation((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastAccountStatusCheckTimestamp(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isAccountStatusCheckDeferred(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireAccountStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"forgiveAccountStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isVaultStatusCheckDeferred(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireVaultStatusCheck()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"forgiveVaultStatusCheck()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireAccountAndVaultStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"EVCUtil\": {\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"EulerRouter\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferGovernance(address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\",\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\",\n                    \"EVC()\",\n                    \"constructor(address,address)\",\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetConfig(address,address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"getConfiguredOracle(address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetResolvedVault(address,bool)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetFallbackOracle(address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            },\n            \"getConfiguredOracle(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\"\n                ]\n            },\n            \"resolveOracle(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            }\n        },\n        \"BaseAdapter\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"CrossAdapter\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AggregatorV3Interface\": {\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestRoundData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            }\n        },\n        \"ICurvePool\": {\n            \"coins(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"price_oracle(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"price_oracle()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lpPrice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            }\n        },\n        \"IPriceOracle\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Governable\": {\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferGovernance(address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\"\n                ]\n            }\n        },\n        \"ScaleUtils\": {},\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"FixedPointMathLib\": {},\n        \"AddressArray\": {},\n        \"AddressSet\": {},\n        \"ERC20PluginsUpgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"plugins(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            }\n        },\n        \"IERC20Plugins\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"plugins(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPlugin\": {\n            \"TOKEN()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateBalances(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ReentrancyGuardLib\": {},\n        \"ReentrancyGuardExt\": {},\n        \"AssetRegistry\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"addAsset(address)\": {\n                \"impacts\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\",\n                    \"getAssetStatus(address)\",\n                    \"getAssets(uint256)\",\n                    \"getAllAssets()\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetsBitFlag(address[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"setAssetStatus(address,uint8)\": {\n                \"impacts\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\",\n                    \"getAssetStatus(address)\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetsBitFlag(address[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssetStatus(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\"\n                ]\n            },\n            \"getAllAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\"\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssetsBitFlag(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            }\n        },\n        \"BasketManager\": {\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"constructor(address,address,address,address,address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokenToIndex(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"getAssetIndexInBasket(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokenToBaseAssetIndex(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"numOfBasketTokens()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokens()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketIdToAddress(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketBalanceOf(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"rebalanceStatus()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"externalTradesHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"eulerRouter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"feeCollector()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"managementFee(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"swapFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"slippageLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"weightDeviationLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"assetRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"strategyRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"tokenSwapAdapter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"retryCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"retryLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"stepDelay()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketAssets(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"collectedSwapFees(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"createNewBasket(string,string,address,uint256,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proposeRebalance(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"setTokenSwapAdapter(address)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proRataRedeem(uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"updateBitFlag(address,uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"execute(address,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            }\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"asset()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"plugins(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"initialize(address,string,string,uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"getTargetWeights()\",\n                    \"getAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalAssets()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"getTargetWeights()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"getAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"requestDeposit(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"requestRedeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"fulfillDeposit(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"setBitFlag(uint256)\": {\n                \"impacts\": [\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"totalAssets()\",\n                    \"getTargetWeights()\",\n                    \"getAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"prepareForRebalance(uint16,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"fulfillRedeem(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalPendingDeposits()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"totalPendingRedemptions()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"cancelDepositRequest()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"cancelRedeemRequest()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"setOperator(address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"share()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimFallbackShares(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"claimFallbackAssets(address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableFallbackShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableFallbackAssets(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"proRataRedeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"harvestManagementFee()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"deposit(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"mint(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fallbackRedeemTriggered(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"fallbackDepositTriggered(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"getDepositRequest(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"getRedeemRequest(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"FeeCollector\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"setProtocolTreasury(address)\": {\n                \"impacts\": [\n                    \"claimTreasuryFee(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"setSponsor(address,address)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\"\n                ]\n            },\n            \"setSponsorSplit(address,uint16)\": {\n                \"impacts\": [\n                    \"notifyHarvestFee(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\"\n                ]\n            },\n            \"notifyHarvestFee(uint256)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            },\n            \"claimSponsorFee(address)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\"\n                ]\n            },\n            \"claimTreasuryFee(address)\": {\n                \"impacts\": [\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            }\n        },\n        \"Rescuable\": {},\n        \"Permit2Lib\": {},\n        \"SafeCast160\": {},\n        \"IERC7540Operator\": {\n            \"setOperator(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC7540Deposit\": {\n            \"requestDeposit(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC7540Redeem\": {\n            \"requestRedeem(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IChainlinkAggregatorV3Interface\": {\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"description()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"version()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoundData(uint80)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestRoundData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPriceOracleWithBaseAndQuote\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"base()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"quote()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IAllowanceTransfer\": {\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,address,uint160,uint48)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint160,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom((address,address,uint160,address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lockdown((address,address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"invalidateNonces(address,address,uint48)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IDAIPermit\": {\n            \"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"nonces(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEIP712\": {\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BitFlag\": {},\n        \"MathUtils\": {},\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            }\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256,bool,bool)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256,bool,bool)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,uint256,bool,bool)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"setTargetWeights(uint256,uint64[])\": {\n                \"impacts\": [\n                    \"getTargetWeights(uint256)\",\n                    \"supportsBitFlag(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getTargetWeights(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setTargetWeights(uint256,uint64[])\"\n                ]\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setTargetWeights(uint256,uint64[])\"\n                ]\n            }\n        },\n        \"StrategyRegistry\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"supportsBitFlag(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            }\n        },\n        \"WeightStrategy\": {\n            \"getTargetWeights(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"TokenSwapAdapter\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BasketManagerHandlers\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"setUp()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            }\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"targetContracts()\",\n                    \"setUp()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\",\n                    \"constructor()\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"setUp()\",\n                    \"constructor()\",\n                    \"invariant_assetConservation()\",\n                    \"invariant_basketRegistrationConsistency()\",\n                    \"invariant_knownBasketRegistrationConsistency()\",\n                    \"invariant_configurationBounds()\",\n                    \"invariant_variableLink()\",\n                    \"invariant_rebalanceStatusValidity()\",\n                    \"invariant_assetIndexConsistency()\",\n                    \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\",\n                    \"invariant_erc20_total_supply()\",\n                    \"max_no_revert(address)\",\n                    \"invariant_deposit_request()\",\n                    \"invariant_redeem_request()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_assetConservation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_basketRegistrationConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_knownBasketRegistrationConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_configurationBounds()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_variableLink()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_rebalanceStatusValidity()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_assetIndexConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_erc20_total_supply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"max_no_revert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_deposit_request()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_redeem_request()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            }\n        },\n        \"FakeBasketManagerForFeeCollector\": {\n            \"setManager(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setManager(address)\"\n                ]\n            }\n        },\n        \"GlobalState\": {\n            \"price_updated()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rebalance_completed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"add_request_deposit_controller(address,uint256,address)\": {\n                \"impacts\": [\n                    \"add_request_deposit_controller(address,uint256,address)\",\n                    \"get_controller_from_request_id(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"add_request_deposit_controller(address,uint256,address)\"\n                ]\n            },\n            \"get_controller_from_request_id(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"add_request_deposit_controller(address,uint256,address)\"\n                ]\n            }\n        },\n        \"BasketManagerAdminHandler\": {\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"impacts\": [\n                    \"setManagementFee(address,uint16)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setManagementFee(address,uint16)\"\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"impacts\": [\n                    \"setSwapFee(uint16)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setSwapFee(uint16)\"\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"impacts\": [\n                    \"setStepDelay(uint40)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setStepDelay(uint40)\"\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"impacts\": [\n                    \"setRetryLimit(uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setRetryLimit(uint8)\"\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"impacts\": [\n                    \"setSlippageLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setSlippageLimit(uint256)\"\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"impacts\": [\n                    \"setWeightDeviation(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setWeightDeviation(uint256)\"\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"impacts\": [\n                    \"collectSwapFee(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"collectSwapFee(address)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"pause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"pause()\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"unpause()\"\n                ]\n            }\n        },\n        \"FeeCollectorHandler\": {\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"claimSponsorFee(uint256)\",\n                    \"claimTreasuryFee(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"claimSponsorFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"claimTreasuryFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            }\n        },\n        \"OracleHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"changePrice(uint8,bool,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"changePrice(uint8,bool,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\"\n                ]\n            }\n        },\n        \"RebalancerHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proposeRebalancer(bool[])\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"proposeRebalancerOnBasket(address)\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"proposeRebalancerOnAll()\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"baskets_proposed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            }\n        },\n        \"TokenSwapHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"executeSwap()\": {\n                \"impacts\": [\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"proposeSmartSwap()\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"completeRebalance()\": {\n                \"impacts\": [\n                    \"completeRebalance()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\"\n                ]\n            },\n            \"externalTrades()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"rebalancingBaskets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"targetWeights()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"basketAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\",\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"deposit(uint256)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"mint(uint256)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"claimFallbackAssets(uint256)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"claimFallbackShares(uint256)\"\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"deposit(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"mint(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackAssets(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackShares(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\",\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\",\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"requestDeposit(uint256,uint256)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"cancelDepositRequest(uint256)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"requestRedeem(uint256,uint256)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"cancelRedeemRequest(uint256)\"\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelDepositRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelRedeemRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\",\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"UserHandlerBase\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            }\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelDepositRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelRedeemRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"deposit(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"mint(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackAssets(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackShares(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\",\n                    \"mint(uint256,uint256,uint256)\",\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\",\n                    \"proRataRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proRataRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"proRataRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"proRataRedeem(uint256,uint256)\"\n                ]\n            }\n        },\n        \"BasketManagerValidationLib\": {},\n        \"Constants\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AssetRegistryMock\": {\n            \"setMockAssets(uint256,address[])\": {\n                \"impacts\": [\n                    \"addAsset(address,uint256,bytes,uint8)\",\n                    \"getAssets(uint256)\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetCount(uint256)\",\n                    \"getAssetAtIndex(uint256,uint256)\",\n                    \"isAssetRegistered(uint256,address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockPausedAsset(address,bool)\": {\n                \"impacts\": [\n                    \"hasPausedAssets(uint256)\",\n                    \"isAssetPaused(address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockAssetMetadata(address,bytes)\": {\n                \"impacts\": [\n                    \"getAssetMetadata(address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockAssetDecimals(address,uint8)\": {\n                \"impacts\": [\n                    \"getAssetDecimals(address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"addAsset(address,uint256,bytes,uint8)\": {\n                \"impacts\": [\n                    \"addAsset(address,uint256,bytes,uint8)\",\n                    \"getAssets(uint256)\",\n                    \"getAllAssets()\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetMetadata(address)\",\n                    \"getAssetDecimals(address)\",\n                    \"getAssetCount(uint256)\",\n                    \"getAssetAtIndex(uint256,uint256)\",\n                    \"isAssetRegistered(uint256,address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAllAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"setMockPausedAsset(address,bool)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"isAssetPaused(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockPausedAsset(address,bool)\"\n                ]\n            },\n            \"getAssetMetadata(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssetMetadata(address,bytes)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetDecimals(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssetDecimals(address,uint8)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetCount(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetAtIndex(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"isAssetRegistered(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"setMockPausedAsset(address,bool)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            }\n        },\n        \"ERC20DecimalsMock\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"constructor(uint8,string,string)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"decimals()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            }\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": {\n                \"impacts\": [\n                    \"setPrice(address,address,uint256)\",\n                    \"getPrice(address,address)\",\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"all_assets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getPrice(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getConfiguredOracle(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"primaryOracle()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"all_assets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            }\n        },\n        \"StrategyRegistryMock\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"registerStrategy(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"isStrategyRegistered(address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"unregisterStrategy(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"isStrategyRegistered(address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"setBitFlagSupport(address,uint256,bool)\": {\n                \"impacts\": [\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": {\n                \"impacts\": [\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"supportsBitFlag(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\"\n                ]\n            },\n            \"isStrategyRegistered(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"getRegisteredStrategies()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            }\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC20\": \"constructor(string,string)\",\n        \"Pausable\": \"constructor()\",\n        \"EVCUtil\": \"constructor(address)\",\n        \"EulerRouter\": \"constructor(address,address)\",\n        \"CrossAdapter\": \"constructor(address,address,address,address,address)\",\n        \"ChainlinkOracle\": \"constructor(address,address,address,uint256)\",\n        \"PythOracle\": \"constructor(address,address,address,bytes32,uint256,uint256)\",\n        \"Governable\": \"constructor(address,address)\",\n        \"AssetRegistry\": \"constructor(address)\",\n        \"BasketManager\": \"constructor(address,address,address,address,address,address)\",\n        \"BasketToken\": \"constructor()\",\n        \"FeeCollector\": \"constructor(address,address,address)\",\n        \"AnchoredOracle\": \"constructor(address,address,uint256)\",\n        \"ChainedERC4626Oracle\": \"constructor(IERC4626,address)\",\n        \"CurveEMAOracleUnderlying\": \"constructor(address,address,address,uint256,bool,bool)\",\n        \"ERC4626Oracle\": \"constructor(IERC4626)\",\n        \"ManagedWeightStrategy\": \"constructor(address,address)\",\n        \"StrategyRegistry\": \"constructor(address)\",\n        \"ScenarioSimpleMedusa\": \"constructor()\",\n        \"BasketManagerAdminHandler\": \"constructor(BasketManager)\",\n        \"FeeCollectorHandler\": \"constructor(FeeCollector,BasketManager)\",\n        \"OracleHandler\": \"constructor(BasketManager,MockPriceOracle,GlobalState)\",\n        \"RebalancerHandler\": \"constructor(BasketManager)\",\n        \"TokenSwapHandler\": \"constructor(BasketManager,RebalancerHandler,GlobalState)\",\n        \"ControllerOnlyUserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"ControllerOnlyUserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"RequesterOnlyUserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"RequesterOnlyUserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"UserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"UserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"ERC20DecimalsMock\": \"constructor(uint8,string,string)\",\n        \"StrategyRegistryMock\": \"constructor(address)\"\n    },\n    \"have_external_calls\": {\n        \"AccessControlEnumerable\": [\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"Multicall\": [\n            \"multicall(bytes[])\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"convertToShares(uint256)\",\n            \"totalAssets()\",\n            \"deposit(uint256,address)\",\n            \"redeem(uint256,address,address)\",\n            \"previewRedeem(uint256)\",\n            \"maxWithdraw(address)\",\n            \"withdraw(uint256,address,address)\",\n            \"previewWithdraw(uint256)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"mint(uint256,address)\",\n            \"convertToAssets(uint256)\"\n        ],\n        \"MulticallUpgradeable\": [\n            \"multicall(bytes[])\"\n        ],\n        \"EulerRouter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"resolveOracle(uint256,address,address)\",\n            \"govSetFallbackOracle(address)\",\n            \"transferGovernance(address)\",\n            \"govSetConfig(address,address,address)\",\n            \"govSetResolvedVault(address,bool)\"\n        ],\n        \"CrossAdapter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ChainlinkOracle\": [\n            \"constructor(address,address,address,uint256)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"PythOracle\": [\n            \"constructor(address,address,address,bytes32,uint256,uint256)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"Governable\": [\n            \"transferGovernance(address)\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"balanceOf(address)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"hasPlugin(address,address)\",\n            \"plugins(address)\",\n            \"removePlugin(address)\",\n            \"pluginAt(address,uint256)\",\n            \"pluginsCount(address)\",\n            \"transfer(address,uint256)\",\n            \"removeAllPlugins()\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"AssetRegistry\": [\n            \"getAssets(uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManager\": [\n            \"proRataRedeem(uint256,uint256,address)\",\n            \"constructor(address,address,address,address,address,address)\",\n            \"basketTokenToIndex(address)\",\n            \"proposeRebalance(address[])\",\n            \"execute(address,bytes,uint256)\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"getAssetIndexInBasket(address,address)\",\n            \"collectSwapFee(address)\",\n            \"updateBitFlag(address,uint256)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"setManagementFee(address,uint16)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"rescue(address,address,uint256)\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"BasketToken\": [\n            \"claimFallbackAssets(address,address)\",\n            \"deposit(uint256,address)\",\n            \"deposit(uint256,address,address)\",\n            \"multicall(bytes[])\",\n            \"getTargetWeights()\",\n            \"removePlugin(address)\",\n            \"claimFallbackShares(address,address)\",\n            \"pluginsCount(address)\",\n            \"transfer(address,uint256)\",\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"convertToShares(uint256)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"hasPlugin(address,address)\",\n            \"mint(uint256,address)\",\n            \"convertToAssets(uint256)\",\n            \"fulfillDeposit(uint256)\",\n            \"redeem(uint256,address,address)\",\n            \"initialize(address,string,string,uint256,address,address)\",\n            \"maxMint(address)\",\n            \"plugins(address)\",\n            \"cancelDepositRequest()\",\n            \"getAssets()\",\n            \"pluginAt(address,uint256)\",\n            \"removeAllPlugins()\",\n            \"harvestManagementFee()\",\n            \"pluginBalanceOf(address,address)\",\n            \"requestRedeem(uint256,address,address)\",\n            \"balanceOf(address)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"totalAssets()\",\n            \"requestDeposit(uint256,address,address)\",\n            \"mint(uint256,address,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"maxWithdraw(address)\",\n            \"fulfillRedeem(uint256)\",\n            \"cancelRedeemRequest()\"\n        ],\n        \"FeeCollector\": [\n            \"rescue(address,address,uint256)\",\n            \"setSponsor(address,address)\",\n            \"notifyHarvestFee(uint256)\",\n            \"constructor(address,address,address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"setSponsorSplit(address,uint16)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"claimSponsorFee(address)\",\n            \"revokeRole(bytes32,address)\",\n            \"claimTreasuryFee(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\",\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\",\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\",\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"AnchoredOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"constructor(address,address)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"constructor(address,address,address,uint256,bool,bool)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"constructor(address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"getTargetWeights(uint256)\",\n            \"constructor(address,address)\",\n            \"multicall(bytes[])\",\n            \"setTargetWeights(uint256,uint64[])\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"StrategyRegistry\": [\n            \"supportsBitFlag(uint256,address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManagerHandlers\": [\n            \"labelKnownAddresses()\",\n            \"setUp()\",\n            \"failed()\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"invariant_knownBasketRegistrationConsistency()\",\n            \"labelKnownAddresses()\",\n            \"invariant_redeem_request()\",\n            \"invariant_deposit_request()\",\n            \"constructor()\",\n            \"invariant_assetIndexConsistency()\",\n            \"failed()\",\n            \"invariant_erc20_total_supply()\",\n            \"invariant_basketRegistrationConsistency()\",\n            \"invariant_rebalanceStatusValidity()\",\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\",\n            \"invariant_configurationBounds()\",\n            \"invariant_variableLink()\",\n            \"max_no_revert(address)\",\n            \"invariant_assetConservation()\"\n        ],\n        \"FakeBasketManagerForFeeCollector\": [\n            \"hasRole(bytes32,address)\"\n        ],\n        \"BasketManagerAdminHandler\": [\n            \"unpause()\",\n            \"setWeightDeviation(uint256)\",\n            \"pause()\",\n            \"collectSwapFee(address)\",\n            \"setSlippageLimit(uint256)\",\n            \"setRetryLimit(uint8)\",\n            \"setSwapFee(uint16)\",\n            \"setManagementFee(address,uint16)\",\n            \"setStepDelay(uint40)\"\n        ],\n        \"FeeCollectorHandler\": [\n            \"claimTreasuryFee(uint256)\",\n            \"claimSponsorFee(uint256)\"\n        ],\n        \"OracleHandler\": [\n            \"failed()\",\n            \"labelKnownAddresses()\",\n            \"changePrice(uint8,bool,uint256)\"\n        ],\n        \"RebalancerHandler\": [\n            \"proposeRebalancer(bool[])\",\n            \"failed()\",\n            \"proposeRebalancerOnAll()\",\n            \"proposeRebalancerOnBasket(address)\"\n        ],\n        \"TokenSwapHandler\": [\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"failed()\",\n            \"proposeSmartSwap()\",\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"completeRebalance()\",\n            \"executeSwap()\"\n        ],\n        \"ControllerOnlyUserHandlerBase\": [\n            \"deposit(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"ControllerOnlyUserHandler\": [\n            \"deposit(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"RequesterOnlyUserHandlerBase\": [\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"requestRedeem(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"RequesterOnlyUserHandler\": [\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"requestRedeem(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"UserHandlerBase\": [\n            \"failed()\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"UserHandler\": [\n            \"deposit(uint256)\",\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"proRataRedeem(uint256,uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"requestRedeem(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"Constants\": [\n            \"labelKnownAddresses()\"\n        ],\n        \"MockPriceOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"registerStrategy(address)\",\n            \"unregisterStrategy(address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"TokenSwapAdapterMock\": [\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\"\n        ]\n    },\n    \"use_balance\": {\n        \"BasketManager\": [\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"FeeCollector\": [\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\"\n        ]\n    },\n    \"solc_versions\": [\n        \"0.8.28\"\n    ],\n    \"with_fallback\": [],\n    \"with_receive\": []\n}",
        "markdown": "{\n    \"payable\": {\n        \"IPyth\": [\n            \"updatePriceFeeds(bytes[])\",\n            \"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\",\n            \"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\",\n            \"parseTwapPriceFeedUpdates(bytes[],bytes32[])\",\n            \"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\",\n            \"parsePriceFeedUpdatesWithSlots(bytes[],bytes32[],uint64,uint64)\"\n        ],\n        \"IEVC\": [\n            \"setLockdownMode(bytes19,bool)\",\n            \"setPermitDisabledMode(bytes19,bool)\",\n            \"setNonce(bytes19,uint256,uint256)\",\n            \"setOperator(bytes19,address,uint256)\",\n            \"setAccountOperator(address,address,bool)\",\n            \"enableCollateral(address,address)\",\n            \"disableCollateral(address,address)\",\n            \"reorderCollaterals(address,uint8,uint8)\",\n            \"enableController(address,address)\",\n            \"disableController(address)\",\n            \"permit(address,address,uint256,uint256,uint256,uint256,bytes,bytes)\",\n            \"call(address,address,uint256,bytes)\",\n            \"controlCollateral(address,address,uint256,bytes)\",\n            \"batch((address,address,uint256,bytes)[])\",\n            \"batchRevert((address,address,uint256,bytes)[])\",\n            \"batchSimulation((address,address,uint256,bytes)[])\",\n            \"requireAccountStatusCheck(address)\",\n            \"forgiveAccountStatusCheck(address)\",\n            \"requireVaultStatusCheck()\",\n            \"forgiveVaultStatusCheck()\",\n            \"requireAccountAndVaultStatusCheck(address)\"\n        ],\n        \"IMulticall3\": [\n            \"aggregate((address,bytes)[])\",\n            \"aggregate3((address,bool,bytes)[])\",\n            \"aggregate3Value((address,bool,uint256,bytes)[])\",\n            \"blockAndAggregate((address,bytes)[])\",\n            \"tryAggregate(bool,(address,bytes)[])\",\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\"\n        ],\n        \"AssetRegistry\": [\n            \"constructor(address)\"\n        ],\n        \"BasketManager\": [\n            \"constructor(address,address,address,address,address,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"execute(address,bytes,uint256)\"\n        ],\n        \"BasketToken\": [\n            \"constructor()\"\n        ],\n        \"FeeCollector\": [\n            \"constructor(address,address,address)\"\n        ],\n        \"AnchoredOracle\": [\n            \"constructor(address,address,uint256)\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"constructor(address,address)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"constructor(address,address,address,uint256,bool,bool)\"\n        ],\n        \"ERC4626Oracle\": [\n            \"constructor(address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"constructor(address,address)\"\n        ],\n        \"StrategyRegistry\": [\n            \"constructor(address)\"\n        ],\n        \"TokenSwapAdapter\": [\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\"\n        ],\n        \"TokenSwapAdapterMock\": [\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\"\n        ]\n    },\n    \"timestamp\": {\n        \"ERC20PermitUpgradeable\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n        ],\n        \"ChainlinkOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"PythOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"BasketManager\": [\n            \"proposeRebalance(address[])\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"BasketToken\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"harvestManagementFee()\"\n        ],\n        \"BasketManagerUtils\": [\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\",\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"setTargetWeights(uint256,uint64[])\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\"\n        ]\n    },\n    \"block_number\": {},\n    \"msg_sender\": {\n        \"AccessControl\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"AccessControlEnumerable\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"ERC20\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"Multicall\": [\n            \"multicall(bytes[])\"\n        ],\n        \"ERC20Upgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"deposit(uint256,address)\",\n            \"mint(uint256,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"redeem(uint256,address,address)\"\n        ],\n        \"MulticallUpgradeable\": [\n            \"multicall(bytes[])\"\n        ],\n        \"EulerRouter\": [\n            \"transferGovernance(address)\",\n            \"govSetConfig(address,address,address)\",\n            \"govSetResolvedVault(address,bool)\",\n            \"govSetFallbackOracle(address)\"\n        ],\n        \"Governable\": [\n            \"transferGovernance(address)\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"removePlugin(address)\",\n            \"removeAllPlugins()\"\n        ],\n        \"AssetRegistry\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"addAsset(address)\",\n            \"setAssetStatus(address,uint8)\"\n        ],\n        \"BasketManager\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address,address,address,address,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"proposeRebalance(address[])\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"setTokenSwapAdapter(address)\",\n            \"proRataRedeem(uint256,uint256,address)\",\n            \"setManagementFee(address,uint16)\",\n            \"setSwapFee(uint16)\",\n            \"setStepDelay(uint40)\",\n            \"setRetryLimit(uint8)\",\n            \"setSlippageLimit(uint256)\",\n            \"setWeightDeviation(uint256)\",\n            \"collectSwapFee(address)\",\n            \"updateBitFlag(address,uint256)\",\n            \"pause()\",\n            \"unpause()\",\n            \"execute(address,bytes,uint256)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketToken\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\",\n            \"multicall(bytes[])\",\n            \"addPlugin(address)\",\n            \"removePlugin(address)\",\n            \"removeAllPlugins()\",\n            \"initialize(address,string,string,uint256,address,address)\",\n            \"requestDeposit(uint256,address,address)\",\n            \"requestRedeem(uint256,address,address)\",\n            \"fulfillDeposit(uint256)\",\n            \"setBitFlag(uint256)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"fulfillRedeem(uint256)\",\n            \"cancelDepositRequest()\",\n            \"cancelRedeemRequest()\",\n            \"setOperator(address,bool)\",\n            \"claimFallbackShares(address,address)\",\n            \"claimFallbackAssets(address,address)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"harvestManagementFee()\",\n            \"deposit(uint256,address,address)\",\n            \"deposit(uint256,address)\",\n            \"mint(uint256,address,address)\",\n            \"mint(uint256,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"redeem(uint256,address,address)\"\n        ],\n        \"FeeCollector\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address,address)\",\n            \"setProtocolTreasury(address)\",\n            \"setSponsor(address,address)\",\n            \"setSponsorSplit(address,uint16)\",\n            \"notifyHarvestFee(uint256)\",\n            \"claimSponsorFee(address)\",\n            \"claimTreasuryFee(address)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"multicall(bytes[])\",\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address,address)\",\n            \"setTargetWeights(uint256,uint64[])\"\n        ],\n        \"StrategyRegistry\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\"\n        ],\n        \"ERC20DecimalsMock\": [\n            \"transfer(address,uint256)\",\n            \"approve(address,uint256)\",\n            \"transferFrom(address,address,uint256)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"grantRole(bytes32,address)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"registerStrategy(address)\",\n            \"unregisterStrategy(address)\",\n            \"setBitFlagSupport(address,uint256,bool)\",\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n            \"clearMockData()\"\n        ]\n    },\n    \"msg_gas\": {},\n    \"assert\": {\n        \"ScenarioSimpleMedusa\": {\n            \"invariant_erc20_total_supply()\": [\n                {\n                    \"start\": 17072,\n                    \"length\": 52,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        362\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 65\n                }\n            ],\n            \"max_no_revert(address)\": [\n                {\n                    \"start\": 17704,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        378\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 17827,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        382\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 17952,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        386\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                },\n                {\n                    \"start\": 18079,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        390\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 30\n                }\n            ],\n            \"invariant_deposit_request()\": [\n                {\n                    \"start\": 21893,\n                    \"length\": 37,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        483\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 54\n                }\n            ],\n            \"invariant_redeem_request()\": [\n                {\n                    \"start\": 23808,\n                    \"length\": 38,\n                    \"filename_relative\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"filename_short\": \"test/invariant/handler/BasketManagerHandlers.medusa.t.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        525\n                    ],\n                    \"starting_column\": 17,\n                    \"ending_column\": 55\n                }\n            ]\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        },\n        \"UserHandler\": {\n            \"deposit(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"mint(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 3116,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        81\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeem(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"withdraw(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                {\n                    \"start\": 6599,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/ControllerOnlyUserHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        172\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ],\n            \"claimFallbackShares(uint256)\": [\n                {\n                    \"start\": 4166,\n                    \"length\": 13,\n                    \"filename_relative\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_absolute\": \"/Users/jongseunglim/Documents/cove-contracts-core/test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"filename_short\": \"test/invariant/handler/user/UserBaseHandler.sol\",\n                    \"is_dependency\": false,\n                    \"lines\": [\n                        120\n                    ],\n                    \"starting_column\": 13,\n                    \"ending_column\": 26\n                }\n            ]\n        }\n    },\n    \"constant_functions\": {\n        \"AccessControl\": [\n            \"supportsInterface(bytes4)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"IAccessControl\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\"\n        ],\n        \"AccessControlEnumerable\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"IAccessControlEnumerable\": [\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\"\n        ],\n        \"IERC1363\": [\n            \"supportsInterface(bytes4)\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC4626\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"asset()\",\n            \"totalAssets()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"maxDeposit(address)\",\n            \"previewDeposit(uint256)\",\n            \"maxMint(address)\",\n            \"previewMint(uint256)\",\n            \"maxWithdraw(address)\",\n            \"previewWithdraw(uint256)\",\n            \"maxRedeem(address)\",\n            \"previewRedeem(uint256)\"\n        ],\n        \"IERC5267\": [\n            \"eip712Domain()\"\n        ],\n        \"ERC20\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"IERC20\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC20Metadata\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\"\n        ],\n        \"IERC20Permit\": [\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"Pausable\": [\n            \"paused()\"\n        ],\n        \"ERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"IERC165\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"ERC20Upgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"eip712Domain()\",\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"decimals()\",\n            \"asset()\",\n            \"totalAssets()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"maxDeposit(address)\",\n            \"maxMint(address)\",\n            \"maxWithdraw(address)\",\n            \"maxRedeem(address)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"previewWithdraw(uint256)\",\n            \"previewRedeem(uint256)\"\n        ],\n        \"NoncesUpgradeable\": [\n            \"nonces(address)\"\n        ],\n        \"EIP712Upgradeable\": [\n            \"eip712Domain()\"\n        ],\n        \"ERC165Upgradeable\": [\n            \"supportsInterface(bytes4)\"\n        ],\n        \"IPyth\": [\n            \"getPriceUnsafe(bytes32)\",\n            \"getPriceNoOlderThan(bytes32,uint256)\",\n            \"getEmaPriceUnsafe(bytes32)\",\n            \"getEmaPriceNoOlderThan(bytes32,uint256)\",\n            \"getUpdateFee(bytes[])\"\n        ],\n        \"IEVC\": [\n            \"getRawExecutionContext()\",\n            \"getCurrentOnBehalfOfAccount(address)\",\n            \"areChecksDeferred()\",\n            \"areChecksInProgress()\",\n            \"isControlCollateralInProgress()\",\n            \"isOperatorAuthenticated()\",\n            \"isSimulationInProgress()\",\n            \"haveCommonOwner(address,address)\",\n            \"getAddressPrefix(address)\",\n            \"getAccountOwner(address)\",\n            \"isLockdownMode(bytes19)\",\n            \"isPermitDisabledMode(bytes19)\",\n            \"getNonce(bytes19,uint256)\",\n            \"getOperator(bytes19,address)\",\n            \"isAccountOperatorAuthorized(address,address)\",\n            \"getCollaterals(address)\",\n            \"isCollateralEnabled(address,address)\",\n            \"getControllers(address)\",\n            \"isControllerEnabled(address,address)\",\n            \"getLastAccountStatusCheckTimestamp(address)\",\n            \"isAccountStatusCheckDeferred(address)\",\n            \"isVaultStatusCheckDeferred(address)\"\n        ],\n        \"EVCUtil\": [\n            \"EVC()\"\n        ],\n        \"EulerRouter\": [\n            \"name()\",\n            \"EVC()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"getConfiguredOracle(address,address)\",\n            \"resolveOracle(uint256,address,address)\",\n            \"governor()\",\n            \"name()\",\n            \"fallbackOracle()\",\n            \"resolvedVaults(address)\"\n        ],\n        \"BaseAdapter\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"CrossAdapter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"cross()\",\n            \"quote()\",\n            \"oracleBaseCross()\",\n            \"oracleCrossQuote()\"\n        ],\n        \"AggregatorV3Interface\": [\n            \"decimals()\",\n            \"latestRoundData()\"\n        ],\n        \"ChainlinkOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\",\n            \"feed()\",\n            \"maxStaleness()\"\n        ],\n        \"ICurvePool\": [\n            \"coins(uint256)\",\n            \"price_oracle(uint256)\",\n            \"price_oracle()\",\n            \"lpPrice()\"\n        ],\n        \"PythOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"pyth()\",\n            \"base()\",\n            \"quote()\",\n            \"feedId()\",\n            \"maxStaleness()\",\n            \"maxConfWidth()\"\n        ],\n        \"IPriceOracle\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"Governable\": [\n            \"EVC()\",\n            \"governor()\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"stdError\": [\n            \"assertionError()\",\n            \"arithmeticError()\",\n            \"divisionError()\",\n            \"enumConversionError()\",\n            \"encodeStorageError()\",\n            \"popError()\",\n            \"indexOOBError()\",\n            \"memOverflowError()\",\n            \"zeroVarError()\"\n        ],\n        \"StdInvariant\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\"\n        ],\n        \"Test\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\"\n        ],\n        \"VmSafe\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\"\n        ],\n        \"Vm\": [\n            \"deriveKey(string,uint32)\",\n            \"deriveKey(string,string,uint32)\",\n            \"deriveKey(string,uint32,string)\",\n            \"deriveKey(string,string,uint32,string)\",\n            \"publicKeyP256(uint256)\",\n            \"signCompact(uint256,bytes32)\",\n            \"signCompact(bytes32)\",\n            \"signCompact(address,bytes32)\",\n            \"signP256(uint256,bytes32)\",\n            \"sign(uint256,bytes32)\",\n            \"sign(bytes32)\",\n            \"sign(address,bytes32)\",\n            \"envAddress(string)\",\n            \"envAddress(string,string)\",\n            \"envBool(string)\",\n            \"envBool(string,string)\",\n            \"envBytes32(string)\",\n            \"envBytes32(string,string)\",\n            \"envBytes(string)\",\n            \"envBytes(string,string)\",\n            \"envExists(string)\",\n            \"envInt(string)\",\n            \"envInt(string,string)\",\n            \"envOr(string,bool)\",\n            \"envOr(string,uint256)\",\n            \"envOr(string,string,address[])\",\n            \"envOr(string,string,bytes32[])\",\n            \"envOr(string,string,string[])\",\n            \"envOr(string,string,bytes[])\",\n            \"envOr(string,int256)\",\n            \"envOr(string,address)\",\n            \"envOr(string,bytes32)\",\n            \"envOr(string,string)\",\n            \"envOr(string,bytes)\",\n            \"envOr(string,string,bool[])\",\n            \"envOr(string,string,uint256[])\",\n            \"envOr(string,string,int256[])\",\n            \"envString(string)\",\n            \"envString(string,string)\",\n            \"envUint(string)\",\n            \"envUint(string,string)\",\n            \"isContext(uint8)\",\n            \"addr(uint256)\",\n            \"getBlobBaseFee()\",\n            \"getBlockNumber()\",\n            \"getBlockTimestamp()\",\n            \"getNonce(address)\",\n            \"getStateDiff()\",\n            \"getStateDiffJson()\",\n            \"lastCallGas()\",\n            \"load(address,bytes32)\",\n            \"exists(string)\",\n            \"fsMetadata(string)\",\n            \"getArtifactPathByCode(bytes)\",\n            \"getArtifactPathByDeployedCode(bytes)\",\n            \"getBroadcast(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64,uint8)\",\n            \"getBroadcasts(string,uint64)\",\n            \"getCode(string)\",\n            \"getDeployedCode(string)\",\n            \"getDeployment(string)\",\n            \"getDeployment(string,uint64)\",\n            \"getDeployments(string,uint64)\",\n            \"isDir(string)\",\n            \"isFile(string)\",\n            \"projectRoot()\",\n            \"readDir(string)\",\n            \"readDir(string,uint64)\",\n            \"readDir(string,uint64,bool)\",\n            \"readFile(string)\",\n            \"readFileBinary(string)\",\n            \"readLine(string)\",\n            \"readLink(string)\",\n            \"unixTime()\",\n            \"keyExistsJson(string,string)\",\n            \"parseJsonAddress(string,string)\",\n            \"parseJsonAddressArray(string,string)\",\n            \"parseJsonBool(string,string)\",\n            \"parseJsonBoolArray(string,string)\",\n            \"parseJsonBytes(string,string)\",\n            \"parseJsonBytes32(string,string)\",\n            \"parseJsonBytes32Array(string,string)\",\n            \"parseJsonBytesArray(string,string)\",\n            \"parseJsonInt(string,string)\",\n            \"parseJsonIntArray(string,string)\",\n            \"parseJsonKeys(string,string)\",\n            \"parseJsonString(string,string)\",\n            \"parseJsonStringArray(string,string)\",\n            \"parseJsonTypeArray(string,string,string)\",\n            \"parseJsonType(string,string)\",\n            \"parseJsonType(string,string,string)\",\n            \"parseJsonUint(string,string)\",\n            \"parseJsonUintArray(string,string)\",\n            \"parseJson(string)\",\n            \"parseJson(string,string)\",\n            \"serializeJsonType(string,bytes)\",\n            \"keyExists(string,string)\",\n            \"indexOf(string,string)\",\n            \"parseAddress(string)\",\n            \"parseBool(string)\",\n            \"parseBytes(string)\",\n            \"parseBytes32(string)\",\n            \"parseInt(string)\",\n            \"parseUint(string)\",\n            \"replace(string,string,string)\",\n            \"split(string,string)\",\n            \"toLowercase(string)\",\n            \"toString(address)\",\n            \"toString(bytes)\",\n            \"toString(bytes32)\",\n            \"toString(bool)\",\n            \"toString(uint256)\",\n            \"toString(int256)\",\n            \"toUppercase(string)\",\n            \"trim(string)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256)\",\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\",\n            \"assertApproxEqAbs(int256,int256,uint256)\",\n            \"assertApproxEqAbs(int256,int256,uint256,string)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\",\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\",\n            \"assertApproxEqRel(uint256,uint256,uint256)\",\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\",\n            \"assertApproxEqRel(int256,int256,uint256)\",\n            \"assertApproxEqRel(int256,int256,uint256,string)\",\n            \"assertEqDecimal(uint256,uint256,uint256)\",\n            \"assertEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertEqDecimal(int256,int256,uint256)\",\n            \"assertEqDecimal(int256,int256,uint256,string)\",\n            \"assertEq(bool,bool)\",\n            \"assertEq(bool,bool,string)\",\n            \"assertEq(string,string)\",\n            \"assertEq(string,string,string)\",\n            \"assertEq(bytes,bytes)\",\n            \"assertEq(bytes,bytes,string)\",\n            \"assertEq(bool[],bool[])\",\n            \"assertEq(bool[],bool[],string)\",\n            \"assertEq(uint256[],uint256[])\",\n            \"assertEq(uint256[],uint256[],string)\",\n            \"assertEq(int256[],int256[])\",\n            \"assertEq(int256[],int256[],string)\",\n            \"assertEq(uint256,uint256)\",\n            \"assertEq(address[],address[])\",\n            \"assertEq(address[],address[],string)\",\n            \"assertEq(bytes32[],bytes32[])\",\n            \"assertEq(bytes32[],bytes32[],string)\",\n            \"assertEq(string[],string[])\",\n            \"assertEq(string[],string[],string)\",\n            \"assertEq(bytes[],bytes[])\",\n            \"assertEq(bytes[],bytes[],string)\",\n            \"assertEq(uint256,uint256,string)\",\n            \"assertEq(int256,int256)\",\n            \"assertEq(int256,int256,string)\",\n            \"assertEq(address,address)\",\n            \"assertEq(address,address,string)\",\n            \"assertEq(bytes32,bytes32)\",\n            \"assertEq(bytes32,bytes32,string)\",\n            \"assertFalse(bool)\",\n            \"assertFalse(bool,string)\",\n            \"assertGeDecimal(uint256,uint256,uint256)\",\n            \"assertGeDecimal(uint256,uint256,uint256,string)\",\n            \"assertGeDecimal(int256,int256,uint256)\",\n            \"assertGeDecimal(int256,int256,uint256,string)\",\n            \"assertGe(uint256,uint256)\",\n            \"assertGe(uint256,uint256,string)\",\n            \"assertGe(int256,int256)\",\n            \"assertGe(int256,int256,string)\",\n            \"assertGtDecimal(uint256,uint256,uint256)\",\n            \"assertGtDecimal(uint256,uint256,uint256,string)\",\n            \"assertGtDecimal(int256,int256,uint256)\",\n            \"assertGtDecimal(int256,int256,uint256,string)\",\n            \"assertGt(uint256,uint256)\",\n            \"assertGt(uint256,uint256,string)\",\n            \"assertGt(int256,int256)\",\n            \"assertGt(int256,int256,string)\",\n            \"assertLeDecimal(uint256,uint256,uint256)\",\n            \"assertLeDecimal(uint256,uint256,uint256,string)\",\n            \"assertLeDecimal(int256,int256,uint256)\",\n            \"assertLeDecimal(int256,int256,uint256,string)\",\n            \"assertLe(uint256,uint256)\",\n            \"assertLe(uint256,uint256,string)\",\n            \"assertLe(int256,int256)\",\n            \"assertLe(int256,int256,string)\",\n            \"assertLtDecimal(uint256,uint256,uint256)\",\n            \"assertLtDecimal(uint256,uint256,uint256,string)\",\n            \"assertLtDecimal(int256,int256,uint256)\",\n            \"assertLtDecimal(int256,int256,uint256,string)\",\n            \"assertLt(uint256,uint256)\",\n            \"assertLt(uint256,uint256,string)\",\n            \"assertLt(int256,int256)\",\n            \"assertLt(int256,int256,string)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256)\",\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\",\n            \"assertNotEqDecimal(int256,int256,uint256)\",\n            \"assertNotEqDecimal(int256,int256,uint256,string)\",\n            \"assertNotEq(bool,bool)\",\n            \"assertNotEq(bool,bool,string)\",\n            \"assertNotEq(string,string)\",\n            \"assertNotEq(string,string,string)\",\n            \"assertNotEq(bytes,bytes)\",\n            \"assertNotEq(bytes,bytes,string)\",\n            \"assertNotEq(bool[],bool[])\",\n            \"assertNotEq(bool[],bool[],string)\",\n            \"assertNotEq(uint256[],uint256[])\",\n            \"assertNotEq(uint256[],uint256[],string)\",\n            \"assertNotEq(int256[],int256[])\",\n            \"assertNotEq(int256[],int256[],string)\",\n            \"assertNotEq(uint256,uint256)\",\n            \"assertNotEq(address[],address[])\",\n            \"assertNotEq(address[],address[],string)\",\n            \"assertNotEq(bytes32[],bytes32[])\",\n            \"assertNotEq(bytes32[],bytes32[],string)\",\n            \"assertNotEq(string[],string[])\",\n            \"assertNotEq(string[],string[],string)\",\n            \"assertNotEq(bytes[],bytes[])\",\n            \"assertNotEq(bytes[],bytes[],string)\",\n            \"assertNotEq(uint256,uint256,string)\",\n            \"assertNotEq(int256,int256)\",\n            \"assertNotEq(int256,int256,string)\",\n            \"assertNotEq(address,address)\",\n            \"assertNotEq(address,address,string)\",\n            \"assertNotEq(bytes32,bytes32)\",\n            \"assertNotEq(bytes32,bytes32,string)\",\n            \"assertTrue(bool)\",\n            \"assertTrue(bool,string)\",\n            \"assume(bool)\",\n            \"assumeNoRevert()\",\n            \"assumeNoRevert((address,bool,bytes))\",\n            \"assumeNoRevert((address,bool,bytes)[])\",\n            \"breakpoint(string)\",\n            \"breakpoint(string,bool)\",\n            \"getFoundryVersion()\",\n            \"rpcUrl(string)\",\n            \"rpcUrlStructs()\",\n            \"rpcUrls()\",\n            \"keyExistsToml(string,string)\",\n            \"parseTomlAddress(string,string)\",\n            \"parseTomlAddressArray(string,string)\",\n            \"parseTomlBool(string,string)\",\n            \"parseTomlBoolArray(string,string)\",\n            \"parseTomlBytes(string,string)\",\n            \"parseTomlBytes32(string,string)\",\n            \"parseTomlBytes32Array(string,string)\",\n            \"parseTomlBytesArray(string,string)\",\n            \"parseTomlInt(string,string)\",\n            \"parseTomlIntArray(string,string)\",\n            \"parseTomlKeys(string,string)\",\n            \"parseTomlString(string,string)\",\n            \"parseTomlStringArray(string,string)\",\n            \"parseTomlTypeArray(string,string,string)\",\n            \"parseTomlType(string,string)\",\n            \"parseTomlType(string,string,string)\",\n            \"parseTomlUint(string,string)\",\n            \"parseTomlUintArray(string,string)\",\n            \"parseToml(string)\",\n            \"parseToml(string,string)\",\n            \"computeCreate2Address(bytes32,bytes32,address)\",\n            \"computeCreate2Address(bytes32,bytes32)\",\n            \"computeCreateAddress(address,uint256)\",\n            \"ensNamehash(string)\",\n            \"getLabel(address)\",\n            \"pauseTracing()\",\n            \"randomBool()\",\n            \"randomBytes(uint256)\",\n            \"randomBytes4()\",\n            \"randomBytes8()\",\n            \"randomInt()\",\n            \"randomInt(uint256)\",\n            \"randomUint(uint256)\",\n            \"resumeTracing()\",\n            \"toBase64URL(bytes)\",\n            \"toBase64URL(string)\",\n            \"toBase64(bytes)\",\n            \"toBase64(string)\",\n            \"activeFork()\",\n            \"getBlobhashes()\",\n            \"isPersistent(address)\"\n        ],\n        \"IMulticall3\": [\n            \"getBasefee()\",\n            \"getBlockHash(uint256)\",\n            \"getBlockNumber()\",\n            \"getChainId()\",\n            \"getCurrentBlockCoinbase()\",\n            \"getCurrentBlockDifficulty()\",\n            \"getCurrentBlockGasLimit()\",\n            \"getCurrentBlockTimestamp()\",\n            \"getEthBalance(address)\",\n            \"getLastBlockHash()\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"name()\",\n            \"symbol()\",\n            \"decimals()\",\n            \"totalSupply()\",\n            \"allowance(address,address)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"balanceOf(address)\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"IERC20Plugins\": [\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"IPlugin\": [\n            \"TOKEN()\"\n        ],\n        \"AssetRegistry\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getAssetStatus(address)\",\n            \"getAssets(uint256)\",\n            \"getAllAssets()\",\n            \"hasPausedAssets(uint256)\",\n            \"getAssetsBitFlag(address[])\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"enabledAssets()\"\n        ],\n        \"BasketManager\": [\n            \"paused()\",\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"basketTokenToIndex(address)\",\n            \"getAssetIndexInBasket(address,address)\",\n            \"basketTokenToBaseAssetIndex(address)\",\n            \"numOfBasketTokens()\",\n            \"basketTokens()\",\n            \"basketIdToAddress(bytes32)\",\n            \"basketBalanceOf(address,address)\",\n            \"rebalanceStatus()\",\n            \"externalTradesHash()\",\n            \"eulerRouter()\",\n            \"feeCollector()\",\n            \"managementFee(address)\",\n            \"swapFee()\",\n            \"slippageLimit()\",\n            \"weightDeviationLimit()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"tokenSwapAdapter()\",\n            \"retryCount()\",\n            \"retryLimit()\",\n            \"stepDelay()\",\n            \"basketAssets(address)\",\n            \"collectedSwapFees(address)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"BasketToken\": [\n            \"nonces(address)\",\n            \"DOMAIN_SEPARATOR()\",\n            \"eip712Domain()\",\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"allowance(address,address)\",\n            \"isOperator(address,address)\",\n            \"asset()\",\n            \"convertToShares(uint256)\",\n            \"convertToAssets(uint256)\",\n            \"MAX_PLUGINS_PER_ACCOUNT()\",\n            \"PLUGIN_CALL_GAS_LIMIT()\",\n            \"hasPlugin(address,address)\",\n            \"pluginsCount(address)\",\n            \"pluginAt(address,uint256)\",\n            \"plugins(address)\",\n            \"pluginBalanceOf(address,address)\",\n            \"totalAssets()\",\n            \"getTargetWeights()\",\n            \"getAssets()\",\n            \"pendingDepositRequest(uint256,address)\",\n            \"claimableDepositRequest(uint256,address)\",\n            \"pendingRedeemRequest(uint256,address)\",\n            \"claimableRedeemRequest(uint256,address)\",\n            \"totalPendingDeposits()\",\n            \"totalPendingRedemptions()\",\n            \"share()\",\n            \"claimableFallbackShares(address)\",\n            \"claimableFallbackAssets(address)\",\n            \"maxWithdraw(address)\",\n            \"maxRedeem(address)\",\n            \"maxDeposit(address)\",\n            \"maxMint(address)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"previewWithdraw(uint256)\",\n            \"previewRedeem(uint256)\",\n            \"fallbackRedeemTriggered(uint256)\",\n            \"fallbackDepositTriggered(uint256)\",\n            \"getDepositRequest(uint256)\",\n            \"getRedeemRequest(uint256)\",\n            \"supportsInterface(bytes4)\",\n            \"balanceOf(address)\",\n            \"decimals()\",\n            \"isOperator(address,address)\",\n            \"lastDepositRequestId(address)\",\n            \"lastRedeemRequestId(address)\",\n            \"basketManager()\",\n            \"nextDepositRequestId()\",\n            \"nextRedeemRequestId()\",\n            \"assetRegistry()\",\n            \"bitFlag()\",\n            \"strategy()\",\n            \"lastManagementFeeHarvestTimestamp()\"\n        ],\n        \"FeeCollector\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"protocolTreasury()\",\n            \"basketTokenSponsors(address)\",\n            \"basketTokenSponsorSplits(address)\",\n            \"claimableTreasuryFees(address)\",\n            \"claimableSponsorFees(address)\"\n        ],\n        \"IERC7540Operator\": [\n            \"isOperator(address,address)\"\n        ],\n        \"IERC7540Deposit\": [\n            \"pendingDepositRequest(uint256,address)\",\n            \"claimableDepositRequest(uint256,address)\"\n        ],\n        \"IERC7540Redeem\": [\n            \"pendingRedeemRequest(uint256,address)\",\n            \"claimableRedeemRequest(uint256,address)\"\n        ],\n        \"IChainlinkAggregatorV3Interface\": [\n            \"decimals()\",\n            \"description()\",\n            \"version()\",\n            \"getRoundData(uint80)\",\n            \"latestRoundData()\",\n            \"aggregator()\"\n        ],\n        \"IPriceOracleWithBaseAndQuote\": [\n            \"name()\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"base()\",\n            \"quote()\"\n        ],\n        \"IAllowanceTransfer\": [\n            \"DOMAIN_SEPARATOR()\",\n            \"allowance(address,address,address)\"\n        ],\n        \"IDAIPermit\": [\n            \"nonces(address)\"\n        ],\n        \"IEIP712\": [\n            \"DOMAIN_SEPARATOR()\"\n        ],\n        \"BasketManagerUtils\": [\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\",\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\"\n        ],\n        \"AnchoredOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"primaryOracle()\",\n            \"anchorOracle()\",\n            \"maxDivergence()\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\",\n            \"vaults(uint256)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"pool()\",\n            \"base()\",\n            \"quote()\",\n            \"priceOracleIndex()\"\n        ],\n        \"ERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"name()\",\n            \"name()\",\n            \"base()\",\n            \"quote()\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"getTargetWeights(uint256)\",\n            \"supportsBitFlag(uint256)\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"targetWeights(uint256,uint256)\",\n            \"lastUpdated(uint256)\"\n        ],\n        \"StrategyRegistry\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsBitFlag(uint256,address)\",\n            \"DEFAULT_ADMIN_ROLE()\"\n        ],\n        \"WeightStrategy\": [\n            \"getTargetWeights(uint256)\",\n            \"supportsBitFlag(uint256)\"\n        ],\n        \"BasketManagerHandlers\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"assets(uint256)\",\n            \"admin()\",\n            \"manager()\",\n            \"pauser()\",\n            \"timelock()\",\n            \"protocolTreasury()\",\n            \"users(uint256)\",\n            \"tokenSwap()\",\n            \"rebalancer()\",\n            \"oracleHandler()\",\n            \"feeCollectorHandler()\",\n            \"basketManagerAdminHandler()\",\n            \"basketManager()\",\n            \"basketToken()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"managedStrategy()\",\n            \"priceOracle()\",\n            \"feeCollector()\",\n            \"BASKET_BITFLAG()\",\n            \"initialWeights(uint256)\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"invariant_basketRegistrationConsistency()\",\n            \"invariant_knownBasketRegistrationConsistency()\",\n            \"invariant_configurationBounds()\",\n            \"invariant_variableLink()\",\n            \"invariant_rebalanceStatusValidity()\",\n            \"invariant_assetIndexConsistency()\",\n            \"max_no_revert(address)\",\n            \"invariant_deposit_request()\",\n            \"invariant_redeem_request()\",\n            \"IS_TEST()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"assets(uint256)\",\n            \"admin()\",\n            \"manager()\",\n            \"pauser()\",\n            \"timelock()\",\n            \"protocolTreasury()\",\n            \"users(uint256)\",\n            \"tokenSwap()\",\n            \"rebalancer()\",\n            \"oracleHandler()\",\n            \"feeCollectorHandler()\",\n            \"basketManagerAdminHandler()\",\n            \"basketManager()\",\n            \"basketToken()\",\n            \"assetRegistry()\",\n            \"strategyRegistry()\",\n            \"managedStrategy()\",\n            \"priceOracle()\",\n            \"feeCollector()\",\n            \"BASKET_BITFLAG()\",\n            \"initialWeights(uint256)\"\n        ],\n        \"FakeBasketManagerForFeeCollector\": [\n            \"hasRole(bytes32,address)\",\n            \"basketManager()\"\n        ],\n        \"GlobalState\": [\n            \"get_controller_from_request_id(address,uint256)\",\n            \"price_was_updated()\",\n            \"requestDepositToController(address,uint256,uint256)\"\n        ],\n        \"FeeCollectorHandler\": [\n            \"basketManager()\"\n        ],\n        \"OracleHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\",\n            \"IS_TEST()\",\n            \"basketManager()\",\n            \"globalState()\"\n        ],\n        \"RebalancerHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"baskets_proposed()\",\n            \"IS_TEST()\",\n            \"basketManager()\",\n            \"latest_baskets_proposed(uint256)\"\n        ],\n        \"TokenSwapHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"externalTrades()\",\n            \"rebalancingBaskets()\",\n            \"targetWeights()\",\n            \"basketAssets()\",\n            \"IS_TEST()\",\n            \"last_externalTrades(uint256)\",\n            \"last_basketsToRebalance(uint256)\",\n            \"last_targetWeights(uint256,uint256)\",\n            \"last_basketAssets(uint256,uint256)\",\n            \"basketManager()\",\n            \"globalState()\"\n        ],\n        \"ControllerOnlyUserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"ControllerOnlyUserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"RequesterOnlyUserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"RequesterOnlyUserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"UserHandlerBase\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"UserHandler\": [\n            \"excludeArtifacts()\",\n            \"excludeContracts()\",\n            \"excludeSelectors()\",\n            \"excludeSenders()\",\n            \"targetArtifacts()\",\n            \"targetArtifactSelectors()\",\n            \"targetContracts()\",\n            \"targetSelectors()\",\n            \"targetSenders()\",\n            \"targetInterfaces()\",\n            \"failed()\",\n            \"IS_TEST()\",\n            \"basketManager()\"\n        ],\n        \"Constants\": [\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"BASKET_MANAGER_ROLE()\",\n            \"MANAGER_ROLE()\",\n            \"REBALANCE_PROPOSER_ROLE()\",\n            \"TOKENSWAP_PROPOSER_ROLE()\",\n            \"TOKENSWAP_EXECUTOR_ROLE()\",\n            \"PAUSER_ROLE()\",\n            \"BASKET_TOKEN_ROLE()\",\n            \"TIMELOCK_ROLE()\",\n            \"_WEIGHT_STRATEGY_ROLE()\",\n            \"OPERATOR7540_INTERFACE()\",\n            \"ASYNCHRONOUS_DEPOSIT_INTERFACE()\",\n            \"ASYNCHRONOUS_REDEMPTION_INTERFACE()\",\n            \"PERMIT_TYPEHASH()\",\n            \"ERC1271_MAGIC_VALUE()\",\n            \"CREATE3_FACTORY()\",\n            \"PYTH()\",\n            \"ETH()\",\n            \"USD()\",\n            \"WBTC()\",\n            \"GAUNTLET_STRATEGIST()\",\n            \"ETH_CBBTC()\",\n            \"ETH_EZETH()\",\n            \"ETH_GHO()\",\n            \"ETH_RETH()\",\n            \"ETH_RSETH()\",\n            \"ETH_SUSDE()\",\n            \"ETH_TBTC()\",\n            \"ETH_USDT()\",\n            \"ETH_WBTC()\",\n            \"ETH_WEETH()\",\n            \"ETH_WETH()\",\n            \"ETH_SDAI()\",\n            \"ETH_SFRAX()\",\n            \"ETH_USDC()\",\n            \"ETH_DAI()\",\n            \"ETH_FRAX()\",\n            \"ETH_USDE()\",\n            \"ETH_SFRXUSD()\",\n            \"ETH_FRXUSD()\",\n            \"ETH_YSYG_YVUSDS_1()\",\n            \"ETH_USDS()\",\n            \"ETH_SUPERUSDC()\",\n            \"ETH_COVE()\",\n            \"PYTH_USDC_USD_FEED()\",\n            \"ETH_CHAINLINK_USDC_USD_FEED()\",\n            \"PYTH_DAI_USD_FEED()\",\n            \"ETH_CHAINLINK_DAI_USD_FEED()\",\n            \"PYTH_SDAI_USD_FEED()\",\n            \"PYTH_FRAX_USD_FEED()\",\n            \"ETH_CHAINLINK_FRAX_USD_FEED()\",\n            \"PYTH_USDE_USD_FEED()\",\n            \"ETH_CHAINLINK_USDE_USD_FEED()\",\n            \"PYTH_ETH_USD_FEED()\",\n            \"ETH_CHAINLINK_ETH_USD_FEED()\",\n            \"PYTH_SUSDE_USD_FEED()\",\n            \"ETH_CHAINLINK_SUSDE_USD_FEED()\",\n            \"PYTH_WEETH_USD_FEED()\",\n            \"ETH_CHAINLINK_WEETH_ETH_FEED()\",\n            \"PYTH_EZETH_USD_FEED()\",\n            \"ETH_CHAINLINK_EZETH_ETH_FEED()\",\n            \"PYTH_RSETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RSETH_ETH_FEED()\",\n            \"PYTH_RETH_USD_FEED()\",\n            \"ETH_CHAINLINK_RETH_ETH_FEED()\",\n            \"PYTH_WBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_WBTC_BTC_FEED()\",\n            \"PYTH_TBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_TBTC_BTC_FEED()\",\n            \"PYTH_GHO_USD_FEED()\",\n            \"ETH_CHAINLINK_GHO_USD_FEED()\",\n            \"PYTH_CBBTC_USD_FEED()\",\n            \"ETH_CHAINLINK_CBBTC_USD_FEED()\",\n            \"ETH_CURVE_SFRXUSD_SUSDE_POOL()\",\n            \"PYTH_FRXUSD_USD_FEED()\",\n            \"PYTH_USDS_USD_FEED()\",\n            \"ETH_CHAINLINK_USDS_USD_FEED()\",\n            \"COVE_DEPLOYER_ADDRESS()\",\n            \"COVE_OPS_MULTISIG()\",\n            \"COVE_COMMUNITY_MULTISIG()\",\n            \"COVE_MASTER_REGISTRY()\",\n            \"BOOSTIES_SILVERBACK_AWS_ACCOUNT()\",\n            \"STAGING_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"PRODUCTION_COVE_SILVERBACK_AWS_ACCOUNT()\",\n            \"SPONSOR_GAUNTLET()\",\n            \"COVE_STAGING_OPS_MULTISIG()\",\n            \"COVE_STAGING_COMMUNITY_MULTISIG()\",\n            \"COVE_STAGING_MASTER_REGISTRY()\",\n            \"MAX_MANAGEMENT_FEE()\",\n            \"MANAGEMENT_FEE_DECIMALS()\",\n            \"MAX_SWAP_FEE()\",\n            \"MAX_RETRIES()\",\n            \"REBALANCE_COOLDOWN_SEC()\",\n            \"MAX_SLIPPAGE_LIMIT()\",\n            \"MAX_WEIGHT_DEVIATION_LIMIT()\",\n            \"MIN_STEP_DELAY()\",\n            \"MAX_STEP_DELAY()\",\n            \"EVC()\",\n            \"BLOCK_NUMBER_MAINNET_FORK()\"\n        ],\n        \"AssetRegistryMock\": [\n            \"getAssets(uint256)\",\n            \"getAllAssets()\",\n            \"hasPausedAssets(uint256)\",\n            \"isAssetPaused(address)\",\n            \"getAssetMetadata(address)\",\n            \"getAssetDecimals(address)\",\n            \"getAssetCount(uint256)\",\n            \"getAssetAtIndex(uint256,uint256)\",\n            \"isAssetRegistered(uint256,address)\",\n            \"getPausedAssets(uint256)\",\n            \"mockAssets(uint256,uint256)\",\n            \"mockPausedAssets(address)\",\n            \"mockAssetMetadata(address)\",\n            \"mockAssetDecimals(address)\"\n        ],\n        \"ERC20DecimalsMock\": [\n            \"name()\",\n            \"symbol()\",\n            \"totalSupply()\",\n            \"balanceOf(address)\",\n            \"allowance(address,address)\",\n            \"decimals()\"\n        ],\n        \"MockPriceOracle\": [\n            \"getPrice(address,address)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"getConfiguredOracle(address,address)\",\n            \"primaryOracle()\",\n            \"all_assets()\",\n            \"_all_assets(uint256)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"supportsInterface(bytes4)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"hasRole(bytes32,address)\",\n            \"getRoleAdmin(bytes32)\",\n            \"supportsBitFlag(uint256,address)\",\n            \"isStrategyRegistered(address)\",\n            \"getRegisteredStrategies()\",\n            \"clearMockData()\",\n            \"DEFAULT_ADMIN_ROLE()\",\n            \"mockBitFlagSupport(address,uint256)\",\n            \"registeredStrategies(address)\"\n        ]\n    },\n    \"constants_used\": {\n        \"AccessControl\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"AccessControlEnumerable\": {\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20\": {\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"Multicall\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC165\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20Upgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"34\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u0019\\u0001\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'nq\\\\xed\\\\xae\\\\x12\\\\xb1\\\\xb9\\\\x7fM\\\\x1f`7\\\\x0f\\\\xef\\\\x10\\\\x10_\\\\xa2\\\\xfa\\\\xae\\\\x01&\\\\x11J\\\\x16\\\\x9cd\\\\x84]a&\\\\xc9'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"66\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"DOMAIN_SEPARATOR()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"ERC4626Upgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"asset()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalAssets()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"convertToAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxDeposit(address)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxMint(address)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxWithdraw(address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxRedeem(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewDeposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewMint(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"previewWithdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"previewRedeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"NoncesUpgradeable\": {\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"ERC165Upgradeable\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ]\n        },\n        \"EulerRouter\": {\n            \"transferGovernance(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"govSetConfig(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"govSetResolvedVault(address,bool)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"govSetFallbackOracle(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"resolveOracle(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"CrossAdapter\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"259200\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"12\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"int8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"-20\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639916\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"12\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"int8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"-20\",\n                        \"type\": \"int256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639916\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"900\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Governable\": {\n            \"transferGovernance(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"24424147682550103680086155745208052613923654759801159680\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6252581806732826542102055870773261469164455618509096878080\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"95406826884961342500336545879718955523139276405473280\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StdAssertions\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"Test\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20PluginsUpgradeable\": {\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"MAX_PLUGINS_PER_ACCOUNT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"PLUGIN_CALL_GAS_LIMIT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"hasPlugin(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginsCount(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginAt(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"plugins(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginBalanceOf(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addPlugin(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removePlugin(address)\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeAllPlugins()\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"AssetRegistry\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"addAsset(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"255\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setAssetStatus(address,uint8)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetsBitFlag(address[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManager\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"50000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"900\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToIndex(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetIndexInBasket(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToBaseAssetIndex(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"createNewBasket(string,string,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"232\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"472260498517428093450829853099908083\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"96\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"120\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"55\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalance(address[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setTokenSwapAdapter(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"70319816728846589445362000750570655803700195216363692647688146666176345628416\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setManagementFee(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSwapFee(uint16)\": [\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint16\"\n                    }\n                ]\n            ],\n            \"setStepDelay(uint40)\": [\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setRetryLimit(uint8)\": [\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setSlippageLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setWeightDeviation(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"collectSwapFee(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"updateBitFlag(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"execute(address,bytes,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"rescue(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"34\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u0019\\u0001\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'nq\\\\xed\\\\xae\\\\x12\\\\xb1\\\\xb9\\\\x7fM\\\\x1f`7\\\\x0f\\\\xef\\\\x10\\\\x10_\\\\xa2\\\\xfa\\\\xae\\\\x01&\\\\x11J\\\\x16\\\\x9cd\\\\x84]a&\\\\xc9'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"66\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"nonces(address)\": [\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"41026498920877473550552694860415970151284396403628511442111957027090812156672\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"DOMAIN_SEPARATOR()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x8bs\\\\xc3\\\\xc6\\\\x9b\\\\xb8\\\\xfe=Q.\\\\xccL\\\\xf7Y\\\\xccy#\\\\x9f{\\\\x17\\\\x9b\\\\x0f\\\\xfa\\\\xca\\\\xa9\\\\xa7]R+9@\\\\x0f'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"eip712Domain()\": [\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EIP712: Uninitialized\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\u000f\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"name()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"symbol()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"totalSupply()\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"allowance(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"asset()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"convertToAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1313373041\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"MAX_PLUGINS_PER_ACCOUNT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"PLUGIN_CALL_GAS_LIMIT()\": [\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"hasPlugin(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginsCount(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginAt(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"plugins(address)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pluginBalanceOf(address,address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"addPlugin(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removePlugin(address)\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"removeAllPlugins()\": [\n                [\n                    {\n                        \"value\": \"1310969909\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"111325086\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542976\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"57896044618658097711785492504343953926634992332820282019728792003956564819968\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"18446744073709551615\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"initialize(address,string,string,uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"Cove \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cove\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"108904022758810753673719992590105913556127789646572562039383141376366747609600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"255\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"8\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"73010143390315934406010559831118728393600729754696197287367516085911467577600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"totalAssets()\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestDeposit(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"IAllowanceTransfer\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint160\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingDepositRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableDepositRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pendingRedeemRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableRedeemRequest(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"fulfillDeposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"prepareForRebalance(uint16,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"fulfillRedeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest()\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setOperator(address,bool)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(address,address)\": [\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableFallbackShares(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimableFallbackAssets(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"harvestManagementFee()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"31536000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"deposit(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"68\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2048858793\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6277101733925179126504886505003981583386072424808101969920\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"63\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"36\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3370959224025639111533709689598502374825270023453997444744848480697785732608\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxWithdraw(address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxRedeem(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxDeposit(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"maxMint(address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4162175037\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3820768869\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3460021840\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"789190853\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1645144292\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"balanceOf(address)\": [\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"29415985427541420537288775967908144365281488029684598799735506421085900674048\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"37439836327923360225337895871394760624280537466773280374265222508165906222592\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"decimals()\": [\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": [\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"910484757\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"99383044164297460920199564169379472118763403594000230800569066591923778078455\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"99383044164297460920199564169379472118763403594000230800569066591923778078455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"15000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"IAllowanceTransfer\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"281474976710655\",\n                        \"type\": \"uint48\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1461501637330902918203684832716283019655932542975\",\n                        \"type\": \"uint160\"\n                    }\n                ]\n            ]\n        },\n        \"FeeCollector\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setProtocolTreasury(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setSponsor(address,address)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setSponsorSplit(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"notifyHarvestFee(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2904890407\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimSponsorFee(address)\": [\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"claimTreasuryFee(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BASKET_TOKEN_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'l\\\\xcb.Q\\\\xa5\\\\xd7%\\\\x8b\\\\x98\\\\xd8\\\\x84\\\\xc6h\\\\x1f\\\\x06\\\\xb6\\\\xa7Y\\\\x1b\\\\xac\\\\xd0\\\\x18\\\\xa7\\\\xed\\\\xd3N\\\\x81\\\\xe0Q\\\\x8e\\\\xb0\\\\xa2'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"rescue(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"232\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"472260498517428093450829853099908083\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"96\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"55\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"120\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"20000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint40\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"64\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"1000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"340282366920938463463374607431768211455\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,uint256,bool,bool)\": [\n                [\n                    {\n                        \"value\": \"128\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4294967295\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"32\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setTargetWeights(uint256,uint64[])\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint64\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getTargetWeights(uint256)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"23158417847463239084714197001737581570653996933128112807891516801582625927987\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"256\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6811299366900952671974763824040465167839410862684739061144563765171360567055\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"454086624460063511464984254936031011189294057512315937409637584344757371137\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"38597363079105398474523661669562635951089994888546854679819194669304376546645\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"248\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StrategyRegistry\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerHandlers\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"100000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Eve\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Setup weights\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create assets\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create handlers\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DeFi Basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"timelock\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"AliceController\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Alice\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"7\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Set initial prices\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"protocolTreasury\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"400000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DEFI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"300000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Grant roles\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create users\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"pauser\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"manager\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"17\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"25920000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create strategy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create one basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weth\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create swap adapter (mock)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dai\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create core contracts\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"admin\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"usdc\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ]\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"setUp()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor()\": [\n                [\n                    {\n                        \"value\": \"100000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Eve\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Setup weights\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create handlers\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create assets\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xf6hFA]+\\\\xf9\\\\xea\\\\xbd\\\\xa9\\\\xe8G\\\\x93\\\\xff\\\\x9c\\\\x0e\\\\xa9m\\\\x87\\\\xf5\\\\x0f\\\\xc4\\\\x1ef\\\\xaa\\\\x16F\\\\x9cjD/\\\\x05'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DeFi Basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'$\\\\x1e\\\\xcf\\\\x16\\\\xd7\\\\x9d\\\\x0f\\\\x8d\\\\xbf\\\\xb9,\\\\xbc\\\\x07\\\\xfe\\\\x17\\\\x84\\\\x04%\\\\x97l\\\\xf0f\\\\x7f\\\\x02/\\\\xe9\\\\x87|\\\\xaa\\\\x83\\\\x1b\\\\x08'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'e\\\\xd7\\\\xa2\\\\x8e2e\\\\xb3zdt\\\\x92\\\\x9f3e!\\\\xb32\\\\xc1h\\\\x1b\\\\x93?l\\\\xb9\\\\xf37fsD\\\\r\\\\x86*'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"timelock\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"REBALANCE_PROPOSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x98\\\\x07\\\\x14\\\\xbfX\\\"\\\\xa0Yv\\\\xf1\\\\xad\\\\xb6+7\\\\x07\\\\x95\\\\xa0\\\\xda\\\\xca\\\\x1f\\\\xfcI\\\\t\\\\x1c\\\\x0eUx\\\\x19\\\\xd2\\\\xa3\\\\x1db'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"AliceController\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Alice\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PAUSER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"7\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"6\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Set initial prices\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"protocolTreasury\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DEFI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"400000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"300000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Grant roles\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"pauser\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create users\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"17\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"manager\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xc8\\\\x8c(W5J\\\\x9c\\\\xe5~\\\\x07\\\\x82\\\\xc6\\\\x01!\\\\\\\\I<\\\\xac\\\\x9dY\\\\xd0\\\\xc3\\\\x17\\\\xb0\\\\xcc7\\\\xea\\\\xe0\\\\xb7\\\\xe5E\\\\xcd'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"25920000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create strategy\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TOKENSWAP_EXECUTOR_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"TIMELOCK_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create one basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\x96\\\\x9b\\\\x1b\\\\x8f\\\\xf6\\\\x84\\\\xecr\\\\xbd\\\\xc7\\\\xa8\\\\xe8\\\\xf2\\\\x84|_\\\\xf7i/\\\\x00\\\\x95\\\\xef\\\\xbb\\\\xc1!\\\\xdd\\\\x80\\\\xf1&\\\\xc8Z\\\\xbf'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weth\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create swap adapter (mock)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"dai\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"16\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"MANAGER_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Create core contracts\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"18\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"admin\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"usdc\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"invariant_assetConservation()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"### Balance of basket\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset conservation violated for asset\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"### Diff \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_basketRegistrationConsistency()\": [\n                [\n                    {\n                        \"value\": \"Basket token index mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket token count mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_knownBasketRegistrationConsistency()\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BasketId to address mapping mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket has invalid index\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Known basket has invalid index\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_configurationBounds()\": [\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint8\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Step delay below minimum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Management fee exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"60\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Swap fee exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Slippage limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint16\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Weight deviation limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3600\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry limit exceeds maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Step delay above maximum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"500\",\n                        \"type\": \"uint16\"\n                    }\n                ]\n            ],\n            \"invariant_variableLink()\": [\n                [\n                    {\n                        \"value\": \"Basket asset registry mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket manager address mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_rebalanceStatusValidity()\": [\n                [\n                    {\n                        \"value\": \"Basket mask should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket mask is not zero during active rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry count exceeds limit\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Epoch or retry count should be non-zero when timestamp is non-zero\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Retry count should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Timestamp should be zero when not started\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades hash should be non-zero after trade proposal\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Timestamp should not be before proposal timestamp\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Proposal timestamp should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Proposal timestamp should be non-zero during rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades hash should be zero when not started\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket hash is not zero during active rebalance\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket hash should be zero outside of rebalance\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"invariant_assetIndexConsistency()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset index out of bounds\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset index mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Expected reversion\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"invariant_erc20_total_supply()\": [\n                [\n                    {\n                        \"value\": \"total supply \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sum\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"max_no_revert(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_deposit_request()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"invariant_redeem_request()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"GlobalState\": {\n            \"price_updated()\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"rebalance_completed()\": [\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"add_request_deposit_controller(address,uint256,address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"BasketManagerAdminHandler\": {\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"setManagementFee(address,uint16)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSwapFee(uint16)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setStepDelay(uint40)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setRetryLimit(uint8)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setSlippageLimit(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setWeightDeviation(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"collectSwapFee(address)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"pause()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unpause()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"FeeCollectorHandler\": {\n            \"constructor(address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"OracleHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"changePrice(uint8,bool,uint256)\": [\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"100\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,address)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"#### Update price: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"89\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RebalancerHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proposeRebalancer(bool[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalancerOnBasket(address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeRebalancerOnAll()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"TokenSwapHandler\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"executeSwap()\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": [\n                [\n                    {\n                        \"value\": \"\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"proposeSmartSwap()\": [\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"To:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Sells: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total basket-asset pairs: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total supply: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" to \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256,string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total surplus/deficit records: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"INTERNAL TRADE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"External trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Basket: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n--- Processing basket ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Potential external trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"--- Processing non-base assets ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset DEFICIT: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Balance: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Basket: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"to\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== Starting trade generation for baskets ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Generated internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== End of Weight Comparison ===\\n\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset needed for redemptions: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Current USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" DEFICIT: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset SURPLUS: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Generating external trades ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Trade generation summary ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No pending redemption shares are being processed\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"995\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Potential internal trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%) Redeem Adjusted Target Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" SURPLUS: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,string)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Resized internal trades array from\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" index: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" has assets: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Amount:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Buys: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Generating internal trades ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Resized external trades array from \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Total basket USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"\\n=== Comparing Current vs Target Weights ===\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"%) Original Target Weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EXTERNAL TRADE \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" BALANCED\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" : \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Redemption USD value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"From:\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Asset \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"=== End of trade generation ===\\n\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Pending redemptions: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset target value (excl. redemptions): \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Sell Amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset total target: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Generated external trades: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Min Buy Amount: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" USD Value: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint96\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" Target weight: \",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \" (\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Base asset BALANCED\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"--- Processing redemptions ---\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,address,string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Adjusted total USD value (excl. redemptions): \",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"completeRebalance()\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"UserHandlerBase\": {\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelDepositRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"requestRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"cancelRedeemRequest(uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256,uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"9\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"10\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"failed()\": [\n                [\n                    {\n                        \"value\": \"failed\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"deposit(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"mint(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"depositWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeem(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"withdraw(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"redeemWrongAmount(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Bound result\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639932\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"StdUtils bound(uint256,uint256,uint256): Max is less than min.\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"log(string,uint256)\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"claimFallbackShares(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address,address,address,address,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"proRataRedeem(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"Constants\": {\n            \"labelKnownAddresses()\": [\n                [\n                    {\n                        \"value\": \"USDS\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"71947590926165336650087031433512021203852649347\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE DEPLOYER\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"974864090681341546075117279842910212555223713548\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"844902997725159674430327654557261825063393970913\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK GHO/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"21554471928524623454534878526614182883507436801\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"382635785404140336617248693796896106708755835334\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"437426098194082895061803372304124391670360729779\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"219203787454173298542927134139754200529642603066\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"949915588786029878546952654991998098108915653682\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"897597142630517585618193047220246874462730466455\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"weETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1248875146012964071876423320777688075155124985543\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE OPS MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"STAGING COVE SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"822094656259768996315824926312285769301351733494\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"528712043796670679236927275881314680022952705826\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"832422769032568726022321025945926077449759946610\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"777916755127412269031205863275191660515892525493\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sDAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK FRAX/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"611382286831621467233887798921843936019654057231\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1183968255365111327603858758704680170128717497782\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"568931238954543482632373858335079084660814959190\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"944343964417277496965494270819951467305382836577\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK DAI/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1097077688018008265106216665536940668749033598146\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"tBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"649348041982712423110279595256361405277354700364\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WBTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE STAGING COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"61678357398080765210293718086378416697372618187842506566286863523773954249005\",\n                        \"type\": \"Vm\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1256052997027959470484291641481750552981635807311\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE MASTER REGISTRY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1450030388557942648900244728639436321082955512611\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1147103516928115447727869237141219782478379984680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"frxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ezETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sFRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"749677867826265841083370056721792956129151894167\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sUSDe\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK WBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PYTH ORACLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"753275901340653701398949165056298794660388847338\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"476033882743938190886300906922894880350917673680\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"EVC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1205025504043286232664351058211623832522569170285\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1163022888421719912899836930504565803122825180095\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"ysyg_yvUSDS-1\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1061200792607655640532293073838708034500951588093\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"996050538495118299096582895562516634314123010963\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"741980457822584224021029850252656192070816603541\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1092303561187652953708031304775299667115610284304\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"137201129760601940114252644413954141241598360200\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1364068194842176056990105843868530818345537040110\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"180847076211518657644945212059388835\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"502892341695711566134199726504446757569940039899\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"567553966114714201945369846760646744548028933148\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1457125251108450942118515605808163817300890931353\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"sfrxUSD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"USDT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"998019980941191010154046344571611398259898851049\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"544110644340816939372220746866710871299132720153\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CREATE3 FACTORY\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"SuperUSDC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"COVE COMMUNITY MULTISIG\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"840\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"PERMIT2\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"DAI\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"760669128607807243603077257990330222174652447134\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GHO\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"917551056842671309452305380979543736893630245704\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1415076750999154618470257651998792961210900251178\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"FRAX\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"GAUNTLET STRATEGIST\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ezETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK weETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1157797529531642703525352529135736123671239487017\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"706966395147646710701466895086810660515325432651\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK cbBTC/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"370045999925578376645733029383864167550415694895\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1172481386783772740786035154923478299416999868398\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK rsETH/ETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rsETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"196268403159008932410419402999721616371951519129\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK tBTC/BTC\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK ETH/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"hevm cheat code\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"rETH\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"920063013108800277895409560669118171411486729639\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"BOOSTIES SILVERBACK AWS ACCOUNT\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"360076564045613452374634668681766127735889491964\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK USDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"CHAINLINK sUSDe/USD\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"cbBTC\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ]\n        },\n        \"AssetRegistryMock\": {\n            \"addAsset(address,uint256,bytes,uint8)\": [\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"No assets set for bit flag\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"hasPausedAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getAssetAtIndex(uint256,uint256)\": [\n                [\n                    {\n                        \"value\": \"Asset index out of bounds\",\n                        \"type\": \"string\"\n                    }\n                ]\n            ],\n            \"isAssetRegistered(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getPausedAssets(uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"ERC20DecimalsMock\": {\n            \"transfer(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"approve(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ],\n            \"transferFrom(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            ],\n            \"mint(address,uint256)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"address\"\n                    }\n                ]\n            ]\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuote(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"getQuotes(uint256,address,address)\": [\n                [\n                    {\n                        \"value\": \"4\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1000000000000000000\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2923951874\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"28\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        },\n        \"StrategyRegistryMock\": {\n            \"supportsInterface(bytes4)\": [\n                [\n                    {\n                        \"value\": \"33540519\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"2036718347\",\n                        \"type\": \"bytes4\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"593543940\",\n                        \"type\": \"bytes4\"\n                    }\n                ]\n            ],\n            \"grantRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"revokeRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"renounceRole(bytes32,address)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"constructor(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"registerStrategy(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"unregisterStrategy(address)\": [\n                [\n                    {\n                        \"value\": \"True\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"False\",\n                        \"type\": \"bool\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"setBitFlagSupport(address,uint256,bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"Array lengths mismatch\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"supportsBitFlag(uint256,address)\": [\n                [\n                    {\n                        \"value\": \"WEIGHT_STRATEGY_ROLE\",\n                        \"type\": \"string\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"b'\\\\xb5,m\\\\xe6\\\\xbb\\\\xacy\\\\x9a|\\\\xd0\\\\xdcW&\\\\x8dnP\\\\xcdn\\\\xa7%[\\\\x02\\\\x9d\\\\xcf\\\\x8d\\\\xdf\\\\x1a\\\\x9b2\\\\x8b\\\\x1ee'\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ],\n            \"getRegisteredStrategies()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"clearMockData()\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"bytes32\"\n                    }\n                ]\n            ]\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"3735928559\",\n                        \"type\": \"address\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ],\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": [\n                [\n                    {\n                        \"value\": \"0\",\n                        \"type\": \"uint256\"\n                    }\n                ],\n                [\n                    {\n                        \"value\": \"1\",\n                        \"type\": \"uint256\"\n                    }\n                ]\n            ]\n        }\n    },\n    \"constants_used_in_binary\": {\n        \"AccessControlEnumerable\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Multicall\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"34\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC4626Upgradeable\": {\n            \"convertToShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewMint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewWithdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"previewRedeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"EulerRouter\": {\n            \"transferGovernance(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetConfig(address,address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetResolvedVault(address,bool)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"govSetFallbackOracle(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"int8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"20\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"int8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"20\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"Governable\": {\n            \"transferGovernance(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC20PluginsUpgradeable\": {\n            \"transfer(address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"plugins(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AssetRegistry\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addAsset(address)\": {\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setAssetStatus(address,uint8)\": {\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.AND\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetsBitFlag(address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManager\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,address,address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToIndex(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetIndexInBasket(address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToBaseAssetIndex(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"createNewBasket(string,string,address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"120\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"96\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"232\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.OR\": [\n                    [\n                        {\n                            \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"472260498517428093450829853099908083\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalance(address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"updateBitFlag(address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"57896044618658097711785492504343953926418782139537452191302581570759080747168\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"34\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"eip712Domain()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"plugins(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"initialize(address,string,string,uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"totalAssets()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestDeposit(uint256,address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,address,address)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"fulfillDeposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"prepareForRebalance(uint16,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"fulfillRedeem(uint256)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest()\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(address,address)\": {\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"harvestManagementFee()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"63\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"68\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"36\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"64\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"maxMint(address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"789190853\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"4162175037\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"BinaryType.AND\": [\n                    [\n                        {\n                            \"value\": \"1461501637330902918203684832716283019655932542975\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"FeeCollector\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSponsor(address,address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"notifyHarvestFee(uint256)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimSponsorFee(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimTreasuryFee(address)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"120\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"96\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"232\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.OR\": [\n                    [\n                        {\n                            \"value\": \"5878623614256507594275124645717695763639139257454428160\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"472260498517428093450829853099908083\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint8\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address,address,uint256,bool,bool)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LEFT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"128\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"32\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setTargetWeights(uint256,uint64[])\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getTargetWeights(uint256)\": {\n                \"BinaryType.RIGHT_SHIFT\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"248\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"StrategyRegistry\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerHandlers\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"17\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"18\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"100000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"setUp()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor()\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"17\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"18\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"100000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"4\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_assetConservation()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_basketRegistrationConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_knownBasketRegistrationConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_configurationBounds()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_variableLink()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_rebalanceStatusValidity()\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_assetIndexConsistency()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_erc20_total_supply()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"max_no_revert(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_deposit_request()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"invariant_redeem_request()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"GlobalState\": {\n            \"add_request_deposit_controller(address,uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"BasketManagerAdminHandler\": {\n            \"setManagementFee(address,uint16)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"pause()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"unpause()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"OracleHandler\": {\n            \"changePrice(uint8,bool,uint256)\": {\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"100\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MODULO\": [\n                    [\n                        {\n                            \"value\": \"89\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RebalancerHandler\": {\n            \"proposeRebalancer(bool[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalancerOnBasket(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeRebalancerOnAll()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"TokenSwapHandler\": {\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"executeSwap()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proposeSmartSwap()\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1000000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"1000000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"995\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.DIVISION\": [\n                    [\n                        {\n                            \"value\": \"10000000000000000\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1000\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeRebalance()\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UserHandlerBase\": {\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"BinaryType.POWER\": [\n                    [\n                        {\n                            \"value\": \"9\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"10\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"deposit(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"mint(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.LESS_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"proRataRedeem(uint256,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"AssetRegistryMock\": {\n            \"addAsset(address,uint256,bytes,uint8)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"BinaryType.GREATER\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"isAssetRegistered(uint256,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getPausedAssets(uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ],\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.CARET\": [\n                    [\n                        {\n                            \"value\": \"2\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.MULTIPLICATION\": [\n                    [\n                        {\n                            \"value\": \"3\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"StrategyRegistryMock\": {\n            \"grantRole(bytes32,address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"constructor(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"registerStrategy(address)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"unregisterStrategy(address)\": {\n                \"BinaryType.SUBTRACTION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ],\n                \"BinaryType.NOT_EQUAL\": [\n                    [\n                        {\n                            \"value\": \"0\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"BinaryType.ADDITION\": [\n                    [\n                        {\n                            \"value\": \"1\",\n                            \"type\": \"uint256\"\n                        }\n                    ]\n                ]\n            }\n        }\n    },\n    \"functions_relations\": {\n        \"AccessControl\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            }\n        },\n        \"IAccessControl\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AccessControlEnumerable\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IAccessControlEnumerable\": {\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC1363\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFromAndCall(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approveAndCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC4626\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"asset()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC5267\": {\n            \"eip712Domain()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Errors\": {},\n        \"IERC721Errors\": {},\n        \"IERC1155Errors\": {},\n        \"Clones\": {},\n        \"ERC20\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"IERC20\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Metadata\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC20Permit\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"nonces(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"SafeERC20\": {},\n        \"Address\": {},\n        \"Context\": {},\n        \"Errors\": {},\n        \"Multicall\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Panic\": {},\n        \"Pausable\": {\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ReentrancyGuardTransient\": {},\n        \"Strings\": {},\n        \"TransientSlot\": {},\n        \"ECDSA\": {},\n        \"MessageHashUtils\": {},\n        \"ERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC165\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Math\": {},\n        \"SafeCast\": {},\n        \"SignedMath\": {},\n        \"EnumerableSet\": {},\n        \"Initializable\": {},\n        \"ERC20Upgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            }\n        },\n        \"ERC20PermitUpgradeable\": {\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n                ]\n            },\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            },\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\",\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\"\n                ]\n            }\n        },\n        \"ERC4626Upgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"asset()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"totalAssets()\": {\n                \"impacts\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"decimals()\",\n                    \"asset()\",\n                    \"totalAssets()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"previewDeposit(uint256)\",\n                    \"previewMint(uint256)\",\n                    \"previewWithdraw(uint256)\",\n                    \"previewRedeem(uint256)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            }\n        },\n        \"ContextUpgradeable\": {},\n        \"MulticallUpgradeable\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"NoncesUpgradeable\": {\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"nonces(address)\"\n                ]\n            }\n        },\n        \"EIP712Upgradeable\": {\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"eip712Domain()\"\n                ],\n                \"is_impacted_by\": [\n                    \"eip712Domain()\"\n                ]\n            }\n        },\n        \"ERC165Upgradeable\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPyth\": {\n            \"getPriceUnsafe(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getPriceNoOlderThan(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEmaPriceUnsafe(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEmaPriceNoOlderThan(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updatePriceFeeds(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getUpdateFee(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTwapPriceFeedUpdates(bytes[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parsePriceFeedUpdatesWithSlots(bytes[],bytes32[],uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPythEvents\": {},\n        \"PythStructs\": {},\n        \"ExecutionContext\": {},\n        \"IEVC\": {\n            \"getRawExecutionContext()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentOnBehalfOfAccount(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"areChecksDeferred()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"areChecksInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isControlCollateralInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperatorAuthenticated()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isSimulationInProgress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"haveCommonOwner(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAddressPrefix(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAccountOwner(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isLockdownMode(bytes19)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPermitDisabledMode(bytes19)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(bytes19,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getOperator(bytes19,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isAccountOperatorAuthorized(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setLockdownMode(bytes19,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setPermitDisabledMode(bytes19,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(bytes19,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setOperator(bytes19,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setAccountOperator(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCollaterals(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isCollateralEnabled(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableCollateral(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableCollateral(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"reorderCollaterals(address,uint8,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getControllers(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isControllerEnabled(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"enableController(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"disableController(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,address,uint256,uint256,uint256,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"call(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"controlCollateral(address,address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batch((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batchRevert((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"batchSimulation((address,address,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastAccountStatusCheckTimestamp(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isAccountStatusCheckDeferred(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireAccountStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"forgiveAccountStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isVaultStatusCheckDeferred(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireVaultStatusCheck()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"forgiveVaultStatusCheck()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requireAccountAndVaultStatusCheck(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"EVCUtil\": {\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"EulerRouter\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferGovernance(address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\",\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\",\n                    \"EVC()\",\n                    \"constructor(address,address)\",\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetConfig(address,address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"getConfiguredOracle(address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetResolvedVault(address,bool)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"govSetFallbackOracle(address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"resolveOracle(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            },\n            \"getConfiguredOracle(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\"\n                ]\n            },\n            \"resolveOracle(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"govSetConfig(address,address,address)\",\n                    \"govSetResolvedVault(address,bool)\",\n                    \"govSetFallbackOracle(address)\"\n                ]\n            }\n        },\n        \"BaseAdapter\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"CrossAdapter\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AggregatorV3Interface\": {\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestRoundData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ChainlinkOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256)\"\n                ]\n            }\n        },\n        \"ICurvePool\": {\n            \"coins(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"price_oracle(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"price_oracle()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lpPrice()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"PythOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,bytes32,uint256,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,bytes32,uint256,uint256)\"\n                ]\n            }\n        },\n        \"IPriceOracle\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Governable\": {\n            \"EVC()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferGovernance(address)\": {\n                \"impacts\": [\n                    \"transferGovernance(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transferGovernance(address)\"\n                ]\n            }\n        },\n        \"ScaleUtils\": {},\n        \"CommonBase\": {},\n        \"TestBase\": {},\n        \"ScriptBase\": {},\n        \"StdAssertions\": {\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"StdChains\": {},\n        \"StdCheatsSafe\": {},\n        \"StdCheats\": {},\n        \"stdError\": {},\n        \"StdInvariant\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"stdJson\": {},\n        \"stdMath\": {},\n        \"stdStorageSafe\": {},\n        \"stdStorage\": {},\n        \"StdStyle\": {},\n        \"stdToml\": {},\n        \"StdUtils\": {},\n        \"Test\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"VmSafe\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"Vm\": {\n            \"createWallet(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createWallet(uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deriveKey(string,string,uint32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"publicKeyP256(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKey(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rememberKeys(string,string,string,uint32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signCompact(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signP256(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign((address,uint256,uint256,uint256),bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sign(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envExists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envOr(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"envUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isContext(uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setEnv(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"accesses(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addr(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"eth_getLogs(uint256,uint256,address,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobBaseFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingKeyAndParentOf(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingLength(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getMappingSlotAt(address,bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getNonce((address,uint256,uint256,uint256))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRecordedLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getStateDiffJson()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lastCallGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"load(address,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"record()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"recordLogs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeGasMetering()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpc(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startStateDiffRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnDebugTraceRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopAndReturnStateDiff()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopMappingRecording()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"closeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deployCode(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"exists(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ffi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fsMetadata(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getArtifactPathByDeployedCode(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcast(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64,uint8)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBroadcasts(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployedCode(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployment(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getDeployments(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"projectRoot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prompt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecret(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptSecretUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"promptUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readDir(string,uint64,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readFileBinary(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLine(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readLink(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeDir(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeFile(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryFfi(string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"unixTime()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFile(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeFileBinary(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeLine(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJsonUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeAddress(string,string,address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBool(string,string,bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes32(string,string,bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeBytes(string,string,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeInt(string,string,int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeJsonType(string,string,string,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeString(string,string,string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUintToHex(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"serializeUint(string,string,uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeJson(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExists(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"attachDelegation((uint8,bytes32,bytes32,uint64,address))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcastRawTransaction(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"broadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getWallets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signAndAttachDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"signDelegation(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startBroadcast(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopBroadcast()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"contains(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"indexOf(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseAddress(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBool(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseBytes32(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseInt(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseUint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"replace(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"split(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toLowercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toString(int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toUppercase(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"trim(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqAbs(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertApproxEqRel(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertFalse(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertGt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLeDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLe(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLtDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertLt(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(uint256,uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEqDecimal(int256,int256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool,bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes,bytes,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bool[],bool[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256[],uint256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256[],int256[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address[],address[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32[],bytes32[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(string[],string[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes[],bytes[],string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(uint256,uint256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(int256,int256,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(address,address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertNotEq(bytes32,bytes32,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assertTrue(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assume(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes))\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"assumeNoRevert((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"breakpoint(string,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getFoundryVersion()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrl(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrlStructs()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rpcUrls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"sleep(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"keyExistsToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddress(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlAddressArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBool(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBoolArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytes32Array(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlBytesArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlInt(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlIntArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlKeys(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlString(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlStringArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlTypeArray(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlType(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUint(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseTomlUintArray(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"parseToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"writeToml(string,string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreate2Address(bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"computeCreateAddress(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"copyStorage(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"ensNamehash(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLabel(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"label(address,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pauseTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomAddress()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBool()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes4()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomBytes8()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomInt(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"randomUint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resumeTracing()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setArbitraryStorage(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64URL(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"toBase64(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"activeFork()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowCheatcodes(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobBaseFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blobhashes(bytes32[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"chainId(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockedCalls()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"cloneAccount(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"coinbase(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"createSelectFork(string,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deal(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteStateSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"difficulty(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"dumpState(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"etch(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlobhashes()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isPersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"loadAllocs(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"makePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCallRevert(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCall(address,uint256,bytes4,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockCalls(address,uint256,bytes,bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mockFunction(address,address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"prevrandao(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"readCallers()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"resetNonce(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToState(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToStateAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revokePersistent(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"roll(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rollFork(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"selectFork(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setBlockhash(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonce(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setNonceUnsafe(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotGasLastCall(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotState()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshotValue(string,string,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startPrank(address,address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"startSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopPrank()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopSnapshotGas(string,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"store(address,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transact(uint256,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"txGasPrice(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"warp(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshot(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deleteSnapshots()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertToAndDelete(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"revertTo(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"snapshot()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCallMinGas(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectCall(address,uint256,uint64,bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmitAnonymous(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(bool,bool,bool,bool,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectEmit(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectPartialRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes4,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(bytes,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectRevert(address,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemory(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"expectSafeMemoryCall(uint64,uint64)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"skip(bool,string)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"stopExpectSafeMemory()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"console\": {},\n        \"IMulticall3\": {\n            \"aggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3((address,bool,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregate3Value((address,bool,uint256,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"blockAndAggregate((address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBasefee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockHash(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getBlockNumber()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getChainId()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockCoinbase()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockDifficulty()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockGasLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getCurrentBlockTimestamp()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getEthBalance(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getLastBlockHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"tryBlockAndAggregate(bool,(address,bytes)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"safeconsole\": {},\n        \"FixedPointMathLib\": {},\n        \"AddressArray\": {},\n        \"AddressSet\": {},\n        \"ERC20PluginsUpgradeable\": {\n            \"name()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"plugins(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ],\n                \"is_impacted_by\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"balanceOf(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\"\n                ]\n            }\n        },\n        \"IERC20Plugins\": {\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"plugins(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPlugin\": {\n            \"TOKEN()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"updateBalances(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ReentrancyGuardLib\": {},\n        \"ReentrancyGuardExt\": {},\n        \"AssetRegistry\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"addAsset(address)\": {\n                \"impacts\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\",\n                    \"getAssetStatus(address)\",\n                    \"getAssets(uint256)\",\n                    \"getAllAssets()\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetsBitFlag(address[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"setAssetStatus(address,uint8)\": {\n                \"impacts\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\",\n                    \"getAssetStatus(address)\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetsBitFlag(address[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssetStatus(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\"\n                ]\n            },\n            \"getAllAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\"\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            },\n            \"getAssetsBitFlag(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address)\",\n                    \"setAssetStatus(address,uint8)\"\n                ]\n            }\n        },\n        \"BasketManager\": {\n            \"paused()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\"\n                ]\n            },\n            \"constructor(address,address,address,address,address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokenToIndex(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"getAssetIndexInBasket(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokenToBaseAssetIndex(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"numOfBasketTokens()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketTokens()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketIdToAddress(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketBalanceOf(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"rebalanceStatus()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"externalTradesHash()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"eulerRouter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"feeCollector()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"managementFee(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"swapFee()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"slippageLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"weightDeviationLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"assetRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"strategyRegistry()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"tokenSwapAdapter()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"retryCount()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"retryLimit()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"stepDelay()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"basketAssets(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"collectedSwapFees(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"createNewBasket(string,string,address,uint256,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proposeRebalance(address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"setTokenSwapAdapter(address)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"proRataRedeem(uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"updateBitFlag(address,uint256)\": {\n                \"impacts\": [\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"basketTokenToIndex(address)\",\n                    \"getAssetIndexInBasket(address,address)\",\n                    \"basketTokenToBaseAssetIndex(address)\",\n                    \"numOfBasketTokens()\",\n                    \"basketTokens()\",\n                    \"basketIdToAddress(bytes32)\",\n                    \"basketBalanceOf(address,address)\",\n                    \"rebalanceStatus()\",\n                    \"externalTradesHash()\",\n                    \"eulerRouter()\",\n                    \"feeCollector()\",\n                    \"managementFee(address)\",\n                    \"swapFee()\",\n                    \"slippageLimit()\",\n                    \"weightDeviationLimit()\",\n                    \"assetRegistry()\",\n                    \"strategyRegistry()\",\n                    \"tokenSwapAdapter()\",\n                    \"retryCount()\",\n                    \"retryLimit()\",\n                    \"stepDelay()\",\n                    \"basketAssets(address)\",\n                    \"collectedSwapFees(address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\",\n                    \"execute(address,bytes,uint256)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"paused()\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"proposeRebalance(address[])\",\n                    \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proRataRedeem(uint256,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ]\n            },\n            \"execute(address,bytes,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address,address,address,address)\",\n                    \"createNewBasket(string,string,address,uint256,address)\",\n                    \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n                    \"setTokenSwapAdapter(address)\",\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"updateBitFlag(address,uint256)\"\n                ]\n            }\n        },\n        \"BasketToken\": {\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"nonces(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"nonces(address)\"\n                ]\n            },\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"eip712Domain()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"asset()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"convertToShares(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"convertToAssets(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"MAX_PLUGINS_PER_ACCOUNT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"PLUGIN_CALL_GAS_LIMIT()\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"hasPlugin(address,address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginsCount(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginAt(address,uint256)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"plugins(address)\": {\n                \"impacts\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pluginBalanceOf(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"addPlugin(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"removePlugin(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"removeAllPlugins()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\"\n                ]\n            },\n            \"initialize(address,string,string,uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"getTargetWeights()\",\n                    \"getAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"DOMAIN_SEPARATOR()\",\n                    \"eip712Domain()\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"constructor()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalAssets()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"getTargetWeights()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"getAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"requestDeposit(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"requestRedeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"setBitFlag(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"fulfillDeposit(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"setBitFlag(uint256)\": {\n                \"impacts\": [\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"totalAssets()\",\n                    \"getTargetWeights()\",\n                    \"getAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"setBitFlag(uint256)\"\n                ]\n            },\n            \"prepareForRebalance(uint16,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"fulfillRedeem(uint256)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"totalPendingDeposits()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"totalPendingRedemptions()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"cancelDepositRequest()\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"cancelRedeemRequest()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"setOperator(address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"share()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimFallbackShares(address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"claimFallbackAssets(address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableFallbackShares(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"claimableFallbackAssets(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"proRataRedeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"harvestManagementFee()\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"deposit(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"deposit(uint256,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"mint(uint256,address,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"mint(uint256,address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"pendingDepositRequest(uint256,address)\",\n                    \"claimableDepositRequest(uint256,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingDeposits()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackAssets(address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"maxDeposit(address)\",\n                    \"maxMint(address)\",\n                    \"fallbackDepositTriggered(uint256)\",\n                    \"getDepositRequest(uint256)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"withdraw(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"redeem(uint256,address,address)\": {\n                \"impacts\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"pendingRedeemRequest(uint256,address)\",\n                    \"claimableRedeemRequest(uint256,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"totalPendingRedemptions()\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"claimableFallbackShares(address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\",\n                    \"maxWithdraw(address)\",\n                    \"maxRedeem(address)\",\n                    \"fallbackRedeemTriggered(uint256)\",\n                    \"getRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"asset()\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"totalAssets()\",\n                    \"requestDeposit(uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"cancelRedeemRequest()\",\n                    \"setOperator(address,bool)\",\n                    \"claimFallbackShares(address,address)\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxWithdraw(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxRedeem(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"maxDeposit(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"maxMint(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"previewDeposit(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewMint(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewWithdraw(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"previewRedeem(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"fallbackRedeemTriggered(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"fallbackDepositTriggered(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"getDepositRequest(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"cancelDepositRequest()\",\n                    \"claimFallbackAssets(address,address)\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\"\n                ]\n            },\n            \"getRedeemRequest(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"withdraw(uint256,address,address)\",\n                    \"redeem(uint256,address,address)\"\n                ]\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n                    \"name()\",\n                    \"symbol()\",\n                    \"totalSupply()\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"convertToShares(uint256)\",\n                    \"convertToAssets(uint256)\",\n                    \"MAX_PLUGINS_PER_ACCOUNT()\",\n                    \"PLUGIN_CALL_GAS_LIMIT()\",\n                    \"hasPlugin(address,address)\",\n                    \"pluginsCount(address)\",\n                    \"pluginAt(address,uint256)\",\n                    \"plugins(address)\",\n                    \"pluginBalanceOf(address,address)\",\n                    \"addPlugin(address)\",\n                    \"removePlugin(address)\",\n                    \"removeAllPlugins()\",\n                    \"initialize(address,string,string,uint256,address,address)\",\n                    \"requestRedeem(uint256,address,address)\",\n                    \"fulfillDeposit(uint256)\",\n                    \"prepareForRebalance(uint16,address)\",\n                    \"fulfillRedeem(uint256)\",\n                    \"cancelRedeemRequest()\",\n                    \"claimFallbackShares(address,address)\",\n                    \"proRataRedeem(uint256,address,address)\",\n                    \"harvestManagementFee()\",\n                    \"deposit(uint256,address,address)\",\n                    \"deposit(uint256,address)\",\n                    \"mint(uint256,address,address)\",\n                    \"mint(uint256,address)\",\n                    \"balanceOf(address)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"FeeCollector\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"setProtocolTreasury(address)\": {\n                \"impacts\": [\n                    \"claimTreasuryFee(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\"\n                ]\n            },\n            \"setSponsor(address,address)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\"\n                ]\n            },\n            \"setSponsorSplit(address,uint16)\": {\n                \"impacts\": [\n                    \"notifyHarvestFee(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\"\n                ]\n            },\n            \"notifyHarvestFee(uint256)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"setSponsorSplit(address,uint16)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            },\n            \"claimSponsorFee(address)\": {\n                \"impacts\": [\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\"\n                ]\n            },\n            \"claimTreasuryFee(address)\": {\n                \"impacts\": [\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimTreasuryFee(address)\",\n                    \"rescue(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setProtocolTreasury(address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            },\n            \"rescue(address,address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address,address)\",\n                    \"setSponsor(address,address)\",\n                    \"notifyHarvestFee(uint256)\",\n                    \"claimSponsorFee(address)\",\n                    \"claimTreasuryFee(address)\"\n                ]\n            }\n        },\n        \"Rescuable\": {},\n        \"Permit2Lib\": {},\n        \"SafeCast160\": {},\n        \"IERC7540Operator\": {\n            \"setOperator(address,bool)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"isOperator(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC7540Deposit\": {\n            \"requestDeposit(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pendingDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimableDepositRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IERC7540Redeem\": {\n            \"requestRedeem(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"pendingRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"claimableRedeemRequest(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IChainlinkAggregatorV3Interface\": {\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"description()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"version()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoundData(uint80)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"latestRoundData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"aggregator()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IPriceOracleWithBaseAndQuote\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"base()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"quote()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IAllowanceTransfer\": {\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"allowance(address,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"approve(address,address,uint160,uint48)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,((address,uint160,uint48,uint48),address,uint256),bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"permit(address,((address,uint160,uint48,uint48)[],address,uint256),bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint160,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom((address,address,uint160,address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"lockdown((address,address)[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"invalidateNonces(address,address,uint48)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IDAIPermit\": {\n            \"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"nonces(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"IEIP712\": {\n            \"DOMAIN_SEPARATOR()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BasketManagerUtils\": {\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getAssetIndexInBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"basketTokenToIndex((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BitFlag\": {},\n        \"MathUtils\": {},\n        \"AnchoredOracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,uint256)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,uint256)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ChainedERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"constructor(address,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            }\n        },\n        \"CurveEMAOracleUnderlying\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256,bool,bool)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,uint256,bool,bool)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,uint256,bool,bool)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ERC4626Oracle\": {\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address)\"\n                ]\n            },\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"ManagedWeightStrategy\": {\n            \"multicall(bytes[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\",\n                    \"setTargetWeights(uint256,uint64[])\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"setTargetWeights(uint256,uint64[])\": {\n                \"impacts\": [\n                    \"getTargetWeights(uint256)\",\n                    \"supportsBitFlag(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"getTargetWeights(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setTargetWeights(uint256,uint64[])\"\n                ]\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setTargetWeights(uint256,uint64[])\"\n                ]\n            }\n        },\n        \"StrategyRegistry\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            },\n            \"supportsBitFlag(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\"\n                ]\n            }\n        },\n        \"WeightStrategy\": {\n            \"getTargetWeights(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"supportsBitFlag(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"TokenSwapAdapter\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"BasketManagerHandlers\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"setUp()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            }\n        },\n        \"ScenarioSimpleMedusa\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setUp()\"\n                ]\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"setUp()\": {\n                \"impacts\": [\n                    \"targetContracts()\",\n                    \"setUp()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setUp()\",\n                    \"constructor()\"\n                ]\n            },\n            \"constructor()\": {\n                \"impacts\": [\n                    \"setUp()\",\n                    \"constructor()\",\n                    \"invariant_assetConservation()\",\n                    \"invariant_basketRegistrationConsistency()\",\n                    \"invariant_knownBasketRegistrationConsistency()\",\n                    \"invariant_configurationBounds()\",\n                    \"invariant_variableLink()\",\n                    \"invariant_rebalanceStatusValidity()\",\n                    \"invariant_assetIndexConsistency()\",\n                    \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\",\n                    \"invariant_erc20_total_supply()\",\n                    \"max_no_revert(address)\",\n                    \"invariant_deposit_request()\",\n                    \"invariant_redeem_request()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_assetConservation()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_basketRegistrationConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_knownBasketRegistrationConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_configurationBounds()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_variableLink()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_rebalanceStatusValidity()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_assetIndexConsistency()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_erc20_total_supply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"max_no_revert(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_deposit_request()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            },\n            \"invariant_redeem_request()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor()\"\n                ]\n            }\n        },\n        \"FakeBasketManagerForFeeCollector\": {\n            \"setManager(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setManager(address)\"\n                ]\n            }\n        },\n        \"GlobalState\": {\n            \"price_updated()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"rebalance_completed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"add_request_deposit_controller(address,uint256,address)\": {\n                \"impacts\": [\n                    \"add_request_deposit_controller(address,uint256,address)\",\n                    \"get_controller_from_request_id(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"add_request_deposit_controller(address,uint256,address)\"\n                ]\n            },\n            \"get_controller_from_request_id(address,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"add_request_deposit_controller(address,uint256,address)\"\n                ]\n            }\n        },\n        \"BasketManagerAdminHandler\": {\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"setManagementFee(address,uint16)\",\n                    \"setSwapFee(uint16)\",\n                    \"setStepDelay(uint40)\",\n                    \"setRetryLimit(uint8)\",\n                    \"setSlippageLimit(uint256)\",\n                    \"setWeightDeviation(uint256)\",\n                    \"collectSwapFee(address)\",\n                    \"pause()\",\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setManagementFee(address,uint16)\": {\n                \"impacts\": [\n                    \"setManagementFee(address,uint16)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setManagementFee(address,uint16)\"\n                ]\n            },\n            \"setSwapFee(uint16)\": {\n                \"impacts\": [\n                    \"setSwapFee(uint16)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setSwapFee(uint16)\"\n                ]\n            },\n            \"setStepDelay(uint40)\": {\n                \"impacts\": [\n                    \"setStepDelay(uint40)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setStepDelay(uint40)\"\n                ]\n            },\n            \"setRetryLimit(uint8)\": {\n                \"impacts\": [\n                    \"setRetryLimit(uint8)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setRetryLimit(uint8)\"\n                ]\n            },\n            \"setSlippageLimit(uint256)\": {\n                \"impacts\": [\n                    \"setSlippageLimit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setSlippageLimit(uint256)\"\n                ]\n            },\n            \"setWeightDeviation(uint256)\": {\n                \"impacts\": [\n                    \"setWeightDeviation(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"setWeightDeviation(uint256)\"\n                ]\n            },\n            \"collectSwapFee(address)\": {\n                \"impacts\": [\n                    \"collectSwapFee(address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"collectSwapFee(address)\"\n                ]\n            },\n            \"pause()\": {\n                \"impacts\": [\n                    \"pause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"pause()\"\n                ]\n            },\n            \"unpause()\": {\n                \"impacts\": [\n                    \"unpause()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"unpause()\"\n                ]\n            }\n        },\n        \"FeeCollectorHandler\": {\n            \"constructor(address,address)\": {\n                \"impacts\": [\n                    \"claimSponsorFee(uint256)\",\n                    \"claimTreasuryFee(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"claimSponsorFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            },\n            \"claimTreasuryFee(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address)\"\n                ]\n            }\n        },\n        \"OracleHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"changePrice(uint8,bool,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"changePrice(uint8,bool,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\"\n                ]\n            }\n        },\n        \"RebalancerHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proposeRebalancer(bool[])\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"proposeRebalancerOnBasket(address)\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"proposeRebalancerOnAll()\": {\n                \"impacts\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\",\n                    \"baskets_proposed()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address)\",\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            },\n            \"baskets_proposed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeRebalancer(bool[])\",\n                    \"proposeRebalancerOnBasket(address)\",\n                    \"proposeRebalancerOnAll()\"\n                ]\n            }\n        },\n        \"TokenSwapHandler\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address)\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"executeSwap()\": {\n                \"impacts\": [\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"proposeSmartSwap()\": {\n                \"impacts\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"executeSwap()\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\",\n                    \"externalTrades()\",\n                    \"rebalancingBaskets()\",\n                    \"targetWeights()\",\n                    \"basketAssets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"completeRebalance()\": {\n                \"impacts\": [\n                    \"completeRebalance()\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address)\",\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\",\n                    \"completeRebalance()\"\n                ]\n            },\n            \"externalTrades()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"rebalancingBaskets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"targetWeights()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            },\n            \"basketAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n                    \"proposeSmartSwap()\"\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\",\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"deposit(uint256)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"mint(uint256)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"claimFallbackAssets(uint256)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"claimFallbackShares(uint256)\"\n                ]\n            }\n        },\n        \"ControllerOnlyUserHandler\": {\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"deposit(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"mint(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackAssets(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackShares(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\",\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"RequesterOnlyUserHandlerBase\": {\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\",\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"requestDeposit(uint256,uint256)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"cancelDepositRequest(uint256)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"requestRedeem(uint256,uint256)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"cancelRedeemRequest(uint256)\"\n                ]\n            }\n        },\n        \"RequesterOnlyUserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelDepositRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelRedeemRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\",\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            }\n        },\n        \"UserHandlerBase\": {\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"mint(uint256,uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            }\n        },\n        \"UserHandler\": {\n            \"requestDeposit(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelDepositRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelDepositRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelDepositRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"requestRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"requestRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"requestRedeem(uint256,uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"cancelRedeemRequest(uint256)\": {\n                \"impacts\": [\n                    \"cancelRedeemRequest(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"cancelRedeemRequest(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256,uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"excludeArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"excludeSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifacts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetArtifactSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetContracts()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSelectors()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetSenders()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"targetInterfaces()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"failed()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"deposit(uint256)\": {\n                \"impacts\": [\n                    \"deposit(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"deposit(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"mint(uint256)\": {\n                \"impacts\": [\n                    \"mint(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"mint(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"depositWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackAssets(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackAssets(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeem(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"withdraw(uint256)\": {\n                \"impacts\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"redeemWrongAmount(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"claimFallbackShares(uint256)\": {\n                \"impacts\": [\n                    \"claimFallbackShares(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"claimFallbackShares(uint256)\",\n                    \"constructor(address,address,address,address,bool)\"\n                ]\n            },\n            \"constructor(address,address,address,address,bool)\": {\n                \"impacts\": [\n                    \"requestDeposit(uint256,uint256)\",\n                    \"cancelDepositRequest(uint256)\",\n                    \"requestRedeem(uint256,uint256)\",\n                    \"cancelRedeemRequest(uint256)\",\n                    \"mint(uint256,uint256,uint256)\",\n                    \"deposit(uint256)\",\n                    \"mint(uint256)\",\n                    \"depositWrongAmount(uint256,uint256)\",\n                    \"claimFallbackAssets(uint256)\",\n                    \"redeem(uint256)\",\n                    \"withdraw(uint256)\",\n                    \"redeemWrongAmount(uint256,uint256)\",\n                    \"claimFallbackShares(uint256)\",\n                    \"proRataRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"proRataRedeem(uint256,uint256)\": {\n                \"impacts\": [\n                    \"proRataRedeem(uint256,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"constructor(address,address,address,address,bool)\",\n                    \"proRataRedeem(uint256,uint256)\"\n                ]\n            }\n        },\n        \"BasketManagerValidationLib\": {},\n        \"Constants\": {\n            \"labelKnownAddresses()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        },\n        \"AssetRegistryMock\": {\n            \"setMockAssets(uint256,address[])\": {\n                \"impacts\": [\n                    \"addAsset(address,uint256,bytes,uint8)\",\n                    \"getAssets(uint256)\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetCount(uint256)\",\n                    \"getAssetAtIndex(uint256,uint256)\",\n                    \"isAssetRegistered(uint256,address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockPausedAsset(address,bool)\": {\n                \"impacts\": [\n                    \"hasPausedAssets(uint256)\",\n                    \"isAssetPaused(address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockAssetMetadata(address,bytes)\": {\n                \"impacts\": [\n                    \"getAssetMetadata(address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"setMockAssetDecimals(address,uint8)\": {\n                \"impacts\": [\n                    \"getAssetDecimals(address)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"addAsset(address,uint256,bytes,uint8)\": {\n                \"impacts\": [\n                    \"addAsset(address,uint256,bytes,uint8)\",\n                    \"getAssets(uint256)\",\n                    \"getAllAssets()\",\n                    \"hasPausedAssets(uint256)\",\n                    \"getAssetMetadata(address)\",\n                    \"getAssetDecimals(address)\",\n                    \"getAssetCount(uint256)\",\n                    \"getAssetAtIndex(uint256,uint256)\",\n                    \"isAssetRegistered(uint256,address)\",\n                    \"getPausedAssets(uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAllAssets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"hasPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"setMockPausedAsset(address,bool)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"isAssetPaused(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockPausedAsset(address,bool)\"\n                ]\n            },\n            \"getAssetMetadata(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssetMetadata(address,bytes)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetDecimals(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssetDecimals(address,uint8)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetCount(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getAssetAtIndex(uint256,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"isAssetRegistered(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            },\n            \"getPausedAssets(uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setMockAssets(uint256,address[])\",\n                    \"setMockPausedAsset(address,bool)\",\n                    \"addAsset(address,uint256,bytes,uint8)\"\n                ]\n            }\n        },\n        \"ERC20DecimalsMock\": {\n            \"name()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            },\n            \"symbol()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            },\n            \"totalSupply()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"balanceOf(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"transfer(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"allowance(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\"\n                ]\n            },\n            \"approve(address,uint256)\": {\n                \"impacts\": [\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"transferFrom(address,address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"allowance(address,address)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"approve(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"constructor(uint8,string,string)\": {\n                \"impacts\": [\n                    \"name()\",\n                    \"symbol()\",\n                    \"decimals()\"\n                ],\n                \"is_impacted_by\": []\n            },\n            \"mint(address,uint256)\": {\n                \"impacts\": [\n                    \"totalSupply()\",\n                    \"balanceOf(address)\",\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ],\n                \"is_impacted_by\": [\n                    \"transfer(address,uint256)\",\n                    \"transferFrom(address,address,uint256)\",\n                    \"mint(address,uint256)\"\n                ]\n            },\n            \"decimals()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"constructor(uint8,string,string)\"\n                ]\n            }\n        },\n        \"MockPriceOracle\": {\n            \"setPrice(address,address,uint256)\": {\n                \"impacts\": [\n                    \"setPrice(address,address,uint256)\",\n                    \"getPrice(address,address)\",\n                    \"getQuote(uint256,address,address)\",\n                    \"getQuotes(uint256,address,address)\",\n                    \"all_assets()\"\n                ],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getPrice(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getQuote(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getQuotes(uint256,address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            },\n            \"getConfiguredOracle(address,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"primaryOracle()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"all_assets()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"setPrice(address,address,uint256)\"\n                ]\n            }\n        },\n        \"StrategyRegistryMock\": {\n            \"supportsInterface(bytes4)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMember(bytes32,uint256)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMemberCount(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"getRoleMembers(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"hasRole(bytes32,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"getRoleAdmin(bytes32)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"grantRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"revokeRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"renounceRole(bytes32,address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"constructor(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"registerStrategy(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"isStrategyRegistered(address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"unregisterStrategy(address)\": {\n                \"impacts\": [\n                    \"hasRole(bytes32,address)\",\n                    \"getRoleAdmin(bytes32)\",\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\",\n                    \"supportsBitFlag(uint256,address)\",\n                    \"isStrategyRegistered(address)\",\n                    \"clearMockData()\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"setBitFlagSupport(address,uint256,bool)\": {\n                \"impacts\": [\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"setBitFlagSupportBatch(address[],uint256[],bool)\": {\n                \"impacts\": [\n                    \"supportsBitFlag(uint256,address)\"\n                ],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"supportsBitFlag(uint256,address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\",\n                    \"setBitFlagSupport(address,uint256,bool)\",\n                    \"setBitFlagSupportBatch(address[],uint256[],bool)\"\n                ]\n            },\n            \"isStrategyRegistered(address)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            },\n            \"getRegisteredStrategies()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"clearMockData()\": {\n                \"impacts\": [],\n                \"is_impacted_by\": [\n                    \"grantRole(bytes32,address)\",\n                    \"revokeRole(bytes32,address)\",\n                    \"renounceRole(bytes32,address)\",\n                    \"constructor(address)\",\n                    \"registerStrategy(address)\",\n                    \"unregisterStrategy(address)\"\n                ]\n            }\n        },\n        \"TokenSwapAdapterMock\": {\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            },\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\": {\n                \"impacts\": [],\n                \"is_impacted_by\": []\n            }\n        }\n    },\n    \"constructors\": {\n        \"ERC20\": \"constructor(string,string)\",\n        \"Pausable\": \"constructor()\",\n        \"EVCUtil\": \"constructor(address)\",\n        \"EulerRouter\": \"constructor(address,address)\",\n        \"CrossAdapter\": \"constructor(address,address,address,address,address)\",\n        \"ChainlinkOracle\": \"constructor(address,address,address,uint256)\",\n        \"PythOracle\": \"constructor(address,address,address,bytes32,uint256,uint256)\",\n        \"Governable\": \"constructor(address,address)\",\n        \"AssetRegistry\": \"constructor(address)\",\n        \"BasketManager\": \"constructor(address,address,address,address,address,address)\",\n        \"BasketToken\": \"constructor()\",\n        \"FeeCollector\": \"constructor(address,address,address)\",\n        \"AnchoredOracle\": \"constructor(address,address,uint256)\",\n        \"ChainedERC4626Oracle\": \"constructor(IERC4626,address)\",\n        \"CurveEMAOracleUnderlying\": \"constructor(address,address,address,uint256,bool,bool)\",\n        \"ERC4626Oracle\": \"constructor(IERC4626)\",\n        \"ManagedWeightStrategy\": \"constructor(address,address)\",\n        \"StrategyRegistry\": \"constructor(address)\",\n        \"ScenarioSimpleMedusa\": \"constructor()\",\n        \"BasketManagerAdminHandler\": \"constructor(BasketManager)\",\n        \"FeeCollectorHandler\": \"constructor(FeeCollector,BasketManager)\",\n        \"OracleHandler\": \"constructor(BasketManager,MockPriceOracle,GlobalState)\",\n        \"RebalancerHandler\": \"constructor(BasketManager)\",\n        \"TokenSwapHandler\": \"constructor(BasketManager,RebalancerHandler,GlobalState)\",\n        \"ControllerOnlyUserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"ControllerOnlyUserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"RequesterOnlyUserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"RequesterOnlyUserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"UserHandlerBase\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"UserHandler\": \"constructor(BasketManager,GlobalState,address,address,bool)\",\n        \"ERC20DecimalsMock\": \"constructor(uint8,string,string)\",\n        \"StrategyRegistryMock\": \"constructor(address)\"\n    },\n    \"have_external_calls\": {\n        \"AccessControlEnumerable\": [\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"Multicall\": [\n            \"multicall(bytes[])\"\n        ],\n        \"ERC20PermitUpgradeable\": [\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\"\n        ],\n        \"ERC4626Upgradeable\": [\n            \"convertToShares(uint256)\",\n            \"totalAssets()\",\n            \"deposit(uint256,address)\",\n            \"redeem(uint256,address,address)\",\n            \"previewRedeem(uint256)\",\n            \"maxWithdraw(address)\",\n            \"withdraw(uint256,address,address)\",\n            \"previewWithdraw(uint256)\",\n            \"previewDeposit(uint256)\",\n            \"previewMint(uint256)\",\n            \"mint(uint256,address)\",\n            \"convertToAssets(uint256)\"\n        ],\n        \"MulticallUpgradeable\": [\n            \"multicall(bytes[])\"\n        ],\n        \"EulerRouter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"resolveOracle(uint256,address,address)\",\n            \"govSetFallbackOracle(address)\",\n            \"transferGovernance(address)\",\n            \"govSetConfig(address,address,address)\",\n            \"govSetResolvedVault(address,bool)\"\n        ],\n        \"CrossAdapter\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ChainlinkOracle\": [\n            \"constructor(address,address,address,uint256)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"PythOracle\": [\n            \"constructor(address,address,address,bytes32,uint256,uint256)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"Governable\": [\n            \"transferGovernance(address)\"\n        ],\n        \"StdAssertions\": [\n            \"failed()\"\n        ],\n        \"Test\": [\n            \"failed()\"\n        ],\n        \"ERC20PluginsUpgradeable\": [\n            \"balanceOf(address)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"hasPlugin(address,address)\",\n            \"plugins(address)\",\n            \"removePlugin(address)\",\n            \"pluginAt(address,uint256)\",\n            \"pluginsCount(address)\",\n            \"transfer(address,uint256)\",\n            \"removeAllPlugins()\",\n            \"pluginBalanceOf(address,address)\"\n        ],\n        \"AssetRegistry\": [\n            \"getAssets(uint256)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManager\": [\n            \"proRataRedeem(uint256,uint256,address)\",\n            \"constructor(address,address,address,address,address,address)\",\n            \"basketTokenToIndex(address)\",\n            \"proposeRebalance(address[])\",\n            \"execute(address,bytes,uint256)\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\",\n            \"getAssetIndexInBasket(address,address)\",\n            \"collectSwapFee(address)\",\n            \"updateBitFlag(address,uint256)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"setManagementFee(address,uint16)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"completeRebalance((address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\",\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"rescue(address,address,uint256)\",\n            \"proposeTokenSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"BasketToken\": [\n            \"claimFallbackAssets(address,address)\",\n            \"deposit(uint256,address)\",\n            \"deposit(uint256,address,address)\",\n            \"multicall(bytes[])\",\n            \"getTargetWeights()\",\n            \"removePlugin(address)\",\n            \"claimFallbackShares(address,address)\",\n            \"pluginsCount(address)\",\n            \"transfer(address,uint256)\",\n            \"permit2(address,address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"convertToShares(uint256)\",\n            \"proRataRedeem(uint256,address,address)\",\n            \"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\",\n            \"prepareForRebalance(uint16,address)\",\n            \"hasPlugin(address,address)\",\n            \"mint(uint256,address)\",\n            \"convertToAssets(uint256)\",\n            \"fulfillDeposit(uint256)\",\n            \"redeem(uint256,address,address)\",\n            \"initialize(address,string,string,uint256,address,address)\",\n            \"maxMint(address)\",\n            \"plugins(address)\",\n            \"cancelDepositRequest()\",\n            \"getAssets()\",\n            \"pluginAt(address,uint256)\",\n            \"removeAllPlugins()\",\n            \"harvestManagementFee()\",\n            \"pluginBalanceOf(address,address)\",\n            \"requestRedeem(uint256,address,address)\",\n            \"balanceOf(address)\",\n            \"transferFrom(address,address,uint256)\",\n            \"addPlugin(address)\",\n            \"totalAssets()\",\n            \"requestDeposit(uint256,address,address)\",\n            \"mint(uint256,address,address)\",\n            \"withdraw(uint256,address,address)\",\n            \"maxWithdraw(address)\",\n            \"fulfillRedeem(uint256)\",\n            \"cancelRedeemRequest()\"\n        ],\n        \"FeeCollector\": [\n            \"rescue(address,address,uint256)\",\n            \"setSponsor(address,address)\",\n            \"notifyHarvestFee(uint256)\",\n            \"constructor(address,address,address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"setSponsorSplit(address,uint16)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"claimSponsorFee(address)\",\n            \"revokeRole(bytes32,address)\",\n            \"claimTreasuryFee(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\",\n            \"proposeTokenSwap((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"proRataRedeem((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),uint256,uint256,address)\",\n            \"proposeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),address[])\",\n            \"completeRebalance((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\"\n        ],\n        \"AnchoredOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ChainedERC4626Oracle\": [\n            \"constructor(address,address)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"CurveEMAOracleUnderlying\": [\n            \"constructor(address,address,address,uint256,bool,bool)\",\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"ERC4626Oracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\",\n            \"constructor(address)\"\n        ],\n        \"ManagedWeightStrategy\": [\n            \"getTargetWeights(uint256)\",\n            \"constructor(address,address)\",\n            \"multicall(bytes[])\",\n            \"setTargetWeights(uint256,uint64[])\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"StrategyRegistry\": [\n            \"supportsBitFlag(uint256,address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"BasketManagerHandlers\": [\n            \"labelKnownAddresses()\",\n            \"setUp()\",\n            \"failed()\"\n        ],\n        \"ScenarioSimpleMedusa\": [\n            \"invariant_knownBasketRegistrationConsistency()\",\n            \"labelKnownAddresses()\",\n            \"invariant_redeem_request()\",\n            \"invariant_deposit_request()\",\n            \"constructor()\",\n            \"invariant_assetIndexConsistency()\",\n            \"failed()\",\n            \"invariant_erc20_total_supply()\",\n            \"invariant_basketRegistrationConsistency()\",\n            \"invariant_rebalanceStatusValidity()\",\n            \"invariant_completeRebalance_revertsWhen_StepDelayIsNotMet()\",\n            \"invariant_configurationBounds()\",\n            \"invariant_variableLink()\",\n            \"max_no_revert(address)\",\n            \"invariant_assetConservation()\"\n        ],\n        \"FakeBasketManagerForFeeCollector\": [\n            \"hasRole(bytes32,address)\"\n        ],\n        \"BasketManagerAdminHandler\": [\n            \"unpause()\",\n            \"setWeightDeviation(uint256)\",\n            \"pause()\",\n            \"collectSwapFee(address)\",\n            \"setSlippageLimit(uint256)\",\n            \"setRetryLimit(uint8)\",\n            \"setSwapFee(uint16)\",\n            \"setManagementFee(address,uint16)\",\n            \"setStepDelay(uint40)\"\n        ],\n        \"FeeCollectorHandler\": [\n            \"claimTreasuryFee(uint256)\",\n            \"claimSponsorFee(uint256)\"\n        ],\n        \"OracleHandler\": [\n            \"failed()\",\n            \"labelKnownAddresses()\",\n            \"changePrice(uint8,bool,uint256)\"\n        ],\n        \"RebalancerHandler\": [\n            \"proposeRebalancer(bool[])\",\n            \"failed()\",\n            \"proposeRebalancerOnAll()\",\n            \"proposeRebalancerOnBasket(address)\"\n        ],\n        \"TokenSwapHandler\": [\n            \"proposeSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"failed()\",\n            \"proposeSmartSwap()\",\n            \"proposeAndExecuteSwap((address,address,address,address,uint256,uint256,uint256)[],(address,address,uint256,uint256,(address,uint96)[])[],address[],uint64[][],address[][])\",\n            \"completeRebalance()\",\n            \"executeSwap()\"\n        ],\n        \"ControllerOnlyUserHandlerBase\": [\n            \"deposit(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"ControllerOnlyUserHandler\": [\n            \"deposit(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"RequesterOnlyUserHandlerBase\": [\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"requestRedeem(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"RequesterOnlyUserHandler\": [\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"requestRedeem(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"UserHandlerBase\": [\n            \"failed()\",\n            \"mint(uint256,uint256,uint256)\"\n        ],\n        \"UserHandler\": [\n            \"deposit(uint256)\",\n            \"cancelRedeemRequest(uint256)\",\n            \"failed()\",\n            \"withdraw(uint256)\",\n            \"proRataRedeem(uint256,uint256)\",\n            \"mint(uint256)\",\n            \"depositWrongAmount(uint256,uint256)\",\n            \"requestRedeem(uint256,uint256)\",\n            \"redeemWrongAmount(uint256,uint256)\",\n            \"requestDeposit(uint256,uint256)\",\n            \"redeem(uint256)\",\n            \"cancelDepositRequest(uint256)\",\n            \"claimFallbackAssets(uint256)\",\n            \"mint(uint256,uint256,uint256)\",\n            \"claimFallbackShares(uint256)\"\n        ],\n        \"Constants\": [\n            \"labelKnownAddresses()\"\n        ],\n        \"MockPriceOracle\": [\n            \"getQuote(uint256,address,address)\",\n            \"getQuotes(uint256,address,address)\"\n        ],\n        \"StrategyRegistryMock\": [\n            \"registerStrategy(address)\",\n            \"unregisterStrategy(address)\",\n            \"getRoleMemberCount(bytes32)\",\n            \"getRoleMembers(bytes32)\",\n            \"grantRole(bytes32,address)\",\n            \"getRoleMember(bytes32,uint256)\",\n            \"revokeRole(bytes32,address)\",\n            \"constructor(address)\",\n            \"renounceRole(bytes32,address)\"\n        ],\n        \"TokenSwapAdapterMock\": [\n            \"completeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[])\",\n            \"executeTokenSwap((address,address,uint256,uint256,(address,uint96)[])[],bytes)\"\n        ]\n    },\n    \"use_balance\": {\n        \"BasketManager\": [\n            \"createNewBasket(string,string,address,uint256,address)\",\n            \"rescue(address,address,uint256)\"\n        ],\n        \"FeeCollector\": [\n            \"rescue(address,address,uint256)\"\n        ],\n        \"BasketManagerUtils\": [\n            \"createNewBasket((address,address,address,address,mapping(address => uint16),uint16,uint256,uint256,address,address[],mapping(address => mapping(address => uint256)),mapping(bytes32 => address),mapping(address => address[]),mapping(address => mapping(address => uint256)),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),mapping(address => uint256),(bytes32,uint256,uint40,uint40,uint40,uint8,uint8),bytes32,address,uint8,uint40),string,string,address,uint256,address)\"\n        ]\n    },\n    \"solc_versions\": [\n        \"0.8.28\"\n    ],\n    \"with_fallback\": [],\n    \"with_receive\": []\n}",
        "first_markdown_element": "",
        "id": "6ead147a1eff2e44387011396111c4f29ad8de164642ad400df781ea44f5ce82",
        "printer": "echidna"
      }
    ]
  }
}
